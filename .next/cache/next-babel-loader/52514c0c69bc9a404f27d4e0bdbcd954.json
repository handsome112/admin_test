{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/pages/banner/upload.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport { PureComponent, createRef } from 'react';\nimport { message } from 'antd';\nimport Page from '@components/common/layout/page';\nimport { bannerService } from '@services/banner.service';\nimport { BreadcrumbComponent } from '@components/common';\nimport { FormUploadBanner } from '@components/banner/form-upload-banner';\nimport Router from 'next/router';\n\nvar UploadBanner = /*#__PURE__*/function (_PureComponent) {\n  _inherits(UploadBanner, _PureComponent);\n\n  var _super = _createSuper(UploadBanner);\n\n  function UploadBanner() {\n    var _this;\n\n    _classCallCheck(this, UploadBanner);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      uploading: false,\n      uploadPercentage: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_banner\", void 0);\n\n    return _this;\n  }\n\n  _createClass(UploadBanner, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.formRef) this.formRef = createRef();\n    }\n  }, {\n    key: \"onUploading\",\n    value: function onUploading(resp) {\n      this.setState({\n        uploadPercentage: resp.percentage\n      });\n    }\n  }, {\n    key: \"setFormVal\",\n    value: function setFormVal(field, val) {\n      var instance = this.formRef.current;\n      instance.setFieldsValue(_defineProperty({}, field, val));\n    }\n  }, {\n    key: \"beforeUpload\",\n    value: function beforeUpload(file) {\n      this._banner = file;\n      return false;\n    }\n  }, {\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(data.type == 'img' && !this._banner)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", message.error('Please select banner!'));\n\n              case 2:\n                _context.next = 4;\n                return this.setState({\n                  uploading: true\n                });\n\n              case 4:\n                _context.prev = 4;\n\n                if (!(data.type == 'img')) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 8;\n                return bannerService.uploadBanner(this._banner, data, this.onUploading.bind(this));\n\n              case 8:\n                _context.next = 13;\n                break;\n\n              case 10:\n                if (!(data.type == 'html')) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 13;\n                return bannerService.create(data);\n\n              case 13:\n                message.success('Banner has been uploaded'); // TODO - process for response data?\n\n                _context.next = 16;\n                return this.setState({\n                  uploading: false\n                }, function () {\n                  return window.setTimeout(function () {\n                    Router.push({\n                      pathname: '/banner'\n                    }, '/banner');\n                  }, 1000);\n                });\n\n              case 16:\n                _context.next = 23;\n                break;\n\n              case 18:\n                _context.prev = 18;\n                _context.t0 = _context[\"catch\"](4);\n                message.error('An error occurred, please try again!');\n                _context.next = 23;\n                return this.setState({\n                  uploading: false\n                });\n\n              case 23:\n                return _context.abrupt(\"return\", undefined);\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 18]]);\n      }));\n\n      function submit(_x) {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.formRef) this.formRef = createRef();\n      var _this$state = this.state,\n          uploading = _this$state.uploading,\n          uploadPercentage = _this$state.uploadPercentage;\n      return __jsx(React.Fragment, null, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, \"Upload banner\")), __jsx(BreadcrumbComponent, {\n        breadcrumbs: [{\n          title: 'Banners',\n          href: '/banner'\n        }, {\n          title: 'Upload new banner'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }), __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, __jsx(FormUploadBanner, {\n        submit: this.submit.bind(this),\n        beforeUpload: this.beforeUpload.bind(this),\n        uploading: uploading,\n        uploadPercentage: uploadPercentage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n        var ctx;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ctx = _ref.ctx;\n                return _context2.abrupt(\"return\", ctx.query);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return UploadBanner;\n}(PureComponent);\n\nexport default UploadBanner;","map":null,"metadata":{},"sourceType":"module"}
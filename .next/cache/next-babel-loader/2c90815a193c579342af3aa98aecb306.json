{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/pages/posts/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { PureComponent, Fragment } from 'react';\nimport { Table, message, Tag, Breadcrumb, Dropdown, Menu, Button } from 'antd';\nimport { HomeOutlined, DownOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport Page from '@components/common/layout/page';\nimport { postService } from '@services/post.service';\nimport { formatDate } from '@lib/date';\nimport { SearchFilter } from '@components/post/search-filter';\n\nclass Posts extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      pagination: {},\n      searching: false,\n      list: [],\n      limit: 10,\n      filter: {},\n      sortBy: 'updatedAt',\n      sort: 'desc'\n    });\n\n    _defineProperty(this, \"handleTableChange\", (pagination, filters, sorter) => {\n      const pager = _objectSpread({}, this.state.pagination);\n\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n        sortBy: sorter.field || 'updatedAt',\n        sort: sorter.order ? sorter.order === 'descend' ? 'desc' : 'asc' : 'desc'\n      });\n      this.search(pager.current);\n    });\n  }\n\n  componentDidMount() {\n    this.search();\n  }\n\n  async search(page = 1) {\n    try {\n      await this.setState({\n        searching: true\n      });\n      const resp = await postService.search(_objectSpread(_objectSpread({}, this.state.filter), {}, {\n        limit: this.state.limit,\n        offset: (page - 1) * this.state.limit,\n        sortBy: this.state.sortBy,\n        sort: this.state.sort\n      }));\n      await this.setState({\n        searching: false,\n        list: resp.data.data,\n        pagination: _objectSpread(_objectSpread({}, this.state.pagination), {}, {\n          total: resp.data.total\n        })\n      });\n    } catch (e) {\n      message.error('An error occurred, please try again!');\n      await this.setState({\n        searching: false\n      });\n    }\n  }\n\n  async handleFilter(filter) {\n    await this.setState({\n      filter\n    });\n    this.search();\n  }\n\n  async deletePost(id) {\n    if (!confirm('Are you sure you want to delete this post?')) {\n      return false;\n    }\n\n    try {\n      await postService.delete(id);\n      await this.search(this.state.pagination.current);\n    } catch (e) {\n      const err = (await Promise.resolve(e)) || {};\n      message.error(err.message || 'An error occurred, please try again!');\n    }\n  }\n\n  render() {\n    const {\n      list,\n      searching,\n      pagination\n    } = this.state;\n    const columns = [{\n      title: 'Title',\n      dataIndex: 'title',\n      sorter: true,\n\n      render(data, record) {\n        return __jsx(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }\n        }, __jsx(Link, {\n          href: {\n            pathname: '/posts/update',\n            query: {\n              id: record._id\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }\n        }, __jsx(\"a\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }\n        }, record.title)));\n      }\n\n    }, {\n      title: 'Status',\n      dataIndex: 'status',\n      sorter: true,\n\n      render(status) {\n        let color = 'default';\n\n        switch (status) {\n          case 'published':\n            color = 'green';\n            break;\n        }\n\n        return __jsx(Tag, {\n          color: color,\n          key: status,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }\n        }, status.toUpperCase());\n      }\n\n    }, {\n      title: 'Last update',\n      dataIndex: 'updatedAt',\n      sorter: true,\n\n      render(date) {\n        return __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 18\n          }\n        }, formatDate(date));\n      }\n\n    }, {\n      title: 'Actions',\n      dataIndex: '_id',\n      render: id => {\n        return __jsx(Dropdown, {\n          overlay: __jsx(Menu, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }\n          }, __jsx(Menu.Item, {\n            key: \"edit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }\n          }, __jsx(Link, {\n            href: {\n              pathname: '/posts/update',\n              query: {\n                id\n              }\n            },\n            as: `/posts/update?id=${id}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }\n          }, __jsx(\"a\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 23\n            }\n          }, __jsx(EditOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }\n          }), \" Update\"))), __jsx(Menu.Item, {\n            key: \"delete\",\n            onClick: this.deletePost.bind(this, id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }\n          }, __jsx(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }\n          }, __jsx(DeleteOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 23\n            }\n          }), \" Delete\"))),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }\n        }, __jsx(Button, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }\n        }, \"Actions \", __jsx(DownOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }\n        })));\n      }\n    }];\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, \"Posts\")), __jsx(\"div\", {\n      style: {\n        marginBottom: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, __jsx(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, __jsx(Breadcrumb.Item, {\n      href: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, __jsx(HomeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    })), __jsx(Breadcrumb.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, \"Posts\"))), __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, __jsx(SearchFilter, {\n      onSubmit: this.handleFilter.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }), __jsx(Table, {\n      dataSource: list,\n      columns: columns,\n      rowKey: \"_id\",\n      loading: searching,\n      pagination: pagination,\n      onChange: this.handleTableChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Posts;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/src/components/performer/socialsForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent, createRef } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nconst layout = {\n  labelCol: {\n    lg: {\n      span: 4\n    },\n    sm: {\n      span: 6\n    }\n  },\n  wrapperCol: {\n    lg: {\n      span: 20\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\nexport class SocialsForm extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"formRef\", createRef());\n  }\n\n  formRefSubmit() {\n    this.formRef.current.submit();\n  }\n\n  render() {\n    const {\n      socials,\n      onFinish,\n      submiting\n    } = this.props;\n    return __jsx(Form, _extends({\n      ref: this.formRef\n    }, layout, {\n      name: \"form-performer\",\n      onFinish: values => {\n        onFinish({\n          socials: values\n        });\n      },\n      onFinishFailed: () => message.error('Please complete the required fields'),\n      initialValues: socials ? socials : {\n        facebook: 'facebook.com',\n        twitter: 'twitter.com',\n        instagram: 'instagram.com'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }), __jsx(Form.Item, {\n      name: \"facebook\",\n      label: \"Facebook\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, __jsx(Input, {\n      placeholder: socials && socials.facebook || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      name: \"twitter\",\n      label: \"Twitter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, __jsx(Input, {\n      placeholder: socials && socials.twitter || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      name: \"instagram\",\n      label: \"Instagram\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, __jsx(Input, {\n      placeholder: socials && socials.instagram || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n        offset: 4\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: submiting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
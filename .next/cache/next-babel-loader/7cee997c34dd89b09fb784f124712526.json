{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/pages/payout-request/detail.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Layout, message, Select, Button, PageHeader, Row, Col, Input, Descriptions } from 'antd';\nimport Head from 'next/head';\nimport { PureComponent } from 'react';\nimport { BreadcrumbComponent } from '@components/common/breadcrumb';\nimport Page from '@components/common/layout/page';\nimport { payoutRequestService } from 'src/services';\nimport Router from 'next/router';\nimport { getResponseError } from '@lib/utils';\nimport { formatDate } from 'src/lib/date';\nimport { omit } from 'lodash';\nvar Content = Layout.Content;\nvar Item = Descriptions.Item;\nvar invisibleField = ['_id', '__v', 'sourceType', 'sourceId', 'sourceInfo', 'type', 'createdAt', 'updatedAt'];\n\nvar PayoutDetailPage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PayoutDetailPage, _PureComponent);\n\n  var _super = _createSuper(PayoutDetailPage);\n\n  function PayoutDetailPage(props) {\n    var _this;\n\n    _classCallCheck(this, PayoutDetailPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      submitting: false,\n      request: null,\n      loading: true,\n      isUpdating: true,\n      status: '',\n      adminNote: ''\n    };\n    return _this;\n  }\n\n  _createClass(PayoutDetailPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var resp, err;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return payoutRequestService.findById(this.props.id);\n\n              case 3:\n                resp = _context.sent;\n                _context.next = 6;\n                return this.setState({\n                  request: resp.data,\n                  status: resp.data.status,\n                  adminNote: resp.data.adminNote\n                });\n\n              case 6:\n                _context.next = 14;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                _context.next = 12;\n                return Promise.resolve(_context.t0);\n\n              case 12:\n                err = _context.sent;\n                message.error(getResponseError(err));\n\n              case 14:\n                _context.prev = 14;\n                this.setState({\n                  loading: false\n                });\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8, 14, 17]]);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"onUpdate\",\n    value: function () {\n      var _onUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n        var _this$state, status, adminNote, request, err;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$state = this.state, status = _this$state.status, adminNote = _this$state.adminNote, request = _this$state.request;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return payoutRequestService.update(id, {\n                  status: this.state.status,\n                  adminNote: this.state.adminNote\n                });\n\n              case 4:\n                message.success('Updated successfully');\n\n                if (request.sourceType === 'studio') {\n                  Router.push('/payout-request/studios');\n                }\n\n                if (request.sourceType === 'performer') {\n                  Router.push('/payout-request');\n                }\n\n                _context2.next = 15;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                _context2.next = 13;\n                return Promise.resolve(_context2.t0);\n\n              case 13:\n                err = _context2.sent;\n                message.error(getResponseError(err));\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 9]]);\n      }));\n\n      function onUpdate(_x) {\n        return _onUpdate.apply(this, arguments);\n      }\n\n      return onUpdate;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _request$performerInf;\n\n      var _this$state2 = this.state,\n          request = _this$state2.request,\n          adminNote = _this$state2.adminNote;\n      var paymentInfo = [];\n\n      if (request) {\n        var paymentAccountInfo = request.paymentAccountInfo;\n        paymentAccountInfo && Object.keys(omit(paymentAccountInfo, invisibleField)).forEach(function (field) {\n          paymentInfo.push(__jsx(Item, {\n            label: field,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 11\n            }\n          }, paymentAccountInfo[field]));\n        });\n      }\n\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, \"Request Details\")), __jsx(Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"main-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, __jsx(BreadcrumbComponent, {\n        breadcrumbs: [{\n          title: 'Payout Requests',\n          href: '/payout-request'\n        }, {\n          title: (request === null || request === void 0 ? void 0 : request._id) || 'Request Details'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }), request ? __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }, __jsx(PageHeader, {\n        title: \"Payout Request Informations\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }), __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, __jsx(Col, {\n        md: 24,\n        lg: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 23\n        }\n      }, \"Requester:\", ' ', __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }, (_request$performerInf = request.performerInfo) === null || _request$performerInf === void 0 ? void 0 : _request$performerInf.username)), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 23\n        }\n      }, \"Pay Period: \", formatDate(request.fromDate, 'DD/MM/YYYY'), ' ', \"- \", formatDate(request.toDate, 'DD/MM/YYYY')), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 23\n        }\n      }, \"Total token request: \", request.tokenMustPay), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 23\n        }\n      }, \"Previous paid out: \", request.previousPaidOut), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 23\n        }\n      }, \"Remaining token must pay: \", request.pendingToken), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 23\n        }\n      }, \"Note: \", request.requestNote), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 23\n        }\n      }, \"Date requested: \", formatDate(request.fromDate)), __jsx(Descriptions, {\n        title: \"Payment Account Information\",\n        column: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 23\n        }\n      }, paymentInfo.length > 0 ? paymentInfo : ''))), __jsx(Col, {\n        md: 24,\n        lg: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 19\n        }\n      }, __jsx(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 23\n        }\n      }, \"Status:\"), __jsx(Select, {\n        style: {\n          width: '100%'\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            status: e\n          });\n        },\n        defaultValue: this.state.status || 'N/A',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 23\n        }\n      }, __jsx(Select.Option, {\n        key: \"approved\",\n        value: \"approved\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }\n      }, \"Approved\"), __jsx(Select.Option, {\n        key: \"pending\",\n        value: \"pending\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }\n      }, \"Pending\"), __jsx(Select.Option, {\n        key: \"rejected\",\n        value: \"rejected\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, \"Rejected\"), __jsx(Select.Option, {\n        key: \"done\",\n        value: \"done\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }\n      }, \"Done\"))), __jsx(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 23\n        }\n      }, \"Note: \"), __jsx(Input.TextArea, {\n        defaultValue: adminNote,\n        style: {\n          width: '100%'\n        },\n        onChange: function onChange(v) {\n          _this2.setState({\n            adminNote: v.target.value\n          });\n        },\n        placeholder: \"Add your comment here...\",\n        autoSize: {\n          minRows: 3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 23\n        }\n      })), __jsx(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, __jsx(Button, {\n        danger: true,\n        onClick: this.onUpdate.bind(this, request._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 23\n        }\n      }, \"Update\"))))) : __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }, \"Request not found.\"))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref) {\n        var ctx;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                ctx = _ref.ctx;\n                return _context3.abrupt(\"return\", ctx.query);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return PayoutDetailPage;\n}(PureComponent);\n\n_defineProperty(PayoutDetailPage, \"authenticate\", true);\n\n_defineProperty(PayoutDetailPage, \"onlyPerformer\", true);\n\nexport default PayoutDetailPage;","map":null,"metadata":{},"sourceType":"module"}
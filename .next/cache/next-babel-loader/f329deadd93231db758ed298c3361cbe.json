{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/src/components/file/sound-upload.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Upload, message, Button } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { PureComponent } from 'react';\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isLt2M = file.size / 1024 / 1024 < (process.env.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_SOUND || 2);\n\n  if (!isLt2M) {\n    message.error(`Image must smaller than ${process.env.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_IMAGE || 2}MB!`);\n  }\n\n  return isLt2M;\n}\n\nexport default class SoundUpload extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", info => {\n      const {\n        onUploaded\n      } = this.props;\n\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n      }\n\n      if (info.file.status === 'done') {\n        this.setState({\n          loading: false\n        });\n      }\n\n      let fileList = [...info.fileList];\n      fileList = fileList.slice(-1);\n      fileList = fileList.map(file => {\n        if (file.response) {\n          const {\n            data\n          } = file.response;\n          file.url = data.url;\n          file.uid = data._id;\n          file.name = data.name;\n          file.status = 'done';\n          onUploaded && onUploaded({\n            response: info.file.response\n          });\n          this.setState({\n            loading: false\n          });\n        }\n\n        return file;\n      });\n      this.setState({\n        fileList\n      });\n    });\n\n    this.state = {\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fileUrl\n    } = this.props;\n\n    if (fileUrl) {\n      this.setState({\n        fileList: [{\n          uid: '-1',\n          name: fileUrl,\n          status: 'done',\n          url: fileUrl\n        }]\n      });\n    }\n  }\n\n  render() {\n    const {\n      options = {}\n    } = this.props;\n    const {\n      fileList,\n      loading\n    } = this.state;\n    const {\n      headers,\n      uploadUrl\n    } = this.props;\n\n    const UploadButton = () => __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, __jsx(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), \" Upload\"));\n\n    return __jsx(Upload, {\n      name: options.fieldName || 'file',\n      showUploadList: {\n        showPreviewIcon: true,\n        showRemoveIcon: false,\n        showDownloadIcon: false\n      },\n      fileList: fileList,\n      multiple: false,\n      listType: \"text\",\n      className: \"avatar-uploader\",\n      action: uploadUrl,\n      beforeUpload: beforeUpload,\n      onChange: this.handleChange,\n      headers: headers,\n      accept: process.env.NEXT_PUBLIC_SOUND_ACCEPT,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, __jsx(UploadButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
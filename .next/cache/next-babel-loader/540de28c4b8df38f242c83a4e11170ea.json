{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/pages/product/update.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment } from 'react';\nimport Page from '@components/common/layout/page';\nimport { message } from 'antd';\nimport { productService } from '@services/product.service';\nimport Loader from '@components/common/base/loader';\nimport { BreadcrumbComponent } from '@components/common';\nimport { FormProduct } from '@components/product/form-product';\n\nvar ProductUpdate = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ProductUpdate, _PureComponent);\n\n  var _super = _createSuper(ProductUpdate);\n\n  function ProductUpdate() {\n    var _this;\n\n    _classCallCheck(this, ProductUpdate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      submitting: false,\n      fetching: true,\n      product: {},\n      uploadPercentage: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_files\", {\n      image: null,\n      digitalFile: null\n    });\n\n    return _this;\n  }\n\n  _createClass(ProductUpdate, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return productService.findById(this.props.id);\n\n              case 3:\n                resp = _context.sent;\n                this.setState({\n                  product: resp.data\n                });\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                message.error('Product not found!');\n\n              case 10:\n                _context.prev = 10;\n                this.setState({\n                  fetching: false\n                });\n                return _context.finish(10);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7, 10, 13]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"beforeUpload\",\n    value: function beforeUpload(file, field) {\n      this._files[field] = file;\n    }\n  }, {\n    key: \"onUploading\",\n    value: function onUploading(resp) {\n      if (this._files['image'] || this._files['digitalFile']) {\n        this.setState({\n          uploadPercentage: resp.percentage\n        });\n      }\n    }\n  }, {\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        var _this2 = this;\n\n        var files, submitData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                files = Object.keys(this._files).reduce(function (files, key) {\n                  if (_this2._files[key]) {\n                    files.push({\n                      fieldname: key,\n                      file: _this2._files[key] || null\n                    });\n                  }\n\n                  return files;\n                }, []);\n                this.setState({\n                  submitting: true\n                });\n                submitData = _objectSpread({}, data);\n                _context2.next = 6;\n                return productService.update(this.props.id, files, submitData, this.onUploading.bind(this));\n\n              case 6:\n                message.success('Updated successfully');\n                this.setState({\n                  submitting: false\n                });\n                _context2.next = 14;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                // TODO - check and show error here\n                message.error('Something went wrong, please try again!');\n                this.setState({\n                  submitting: false\n                });\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      function submit(_x) {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          product = _this$state.product,\n          submitting = _this$state.submitting,\n          fetching = _this$state.fetching,\n          uploadPercentage = _this$state.uploadPercentage;\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, \"Update Product\")), __jsx(BreadcrumbComponent, {\n        breadcrumbs: [{\n          title: 'Product',\n          href: '/product'\n        }, {\n          title: product.name ? product.name : 'Detail product'\n        }, {\n          title: 'Update'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }), __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, fetching ? __jsx(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }) : __jsx(FormProduct, {\n        product: product,\n        submit: this.submit.bind(this),\n        uploading: submitting,\n        beforeUpload: this.beforeUpload.bind(this),\n        uploadPercentage: uploadPercentage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref) {\n        var ctx;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                ctx = _ref.ctx;\n                return _context3.abrupt(\"return\", ctx.query);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return ProductUpdate;\n}(PureComponent);\n\nexport default ProductUpdate;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/pages/performer/online/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Table, message } from 'antd';\nimport Page from '@components/common/layout/page';\nimport { performerService } from '@services/performer.service';\nimport { BreadcrumbComponent } from '@components/common';\nimport { getDiffToNow } from 'src/lib';\n\nvar Performers = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Performers, _PureComponent);\n\n  var _super = _createSuper(Performers);\n\n  function Performers() {\n    var _this;\n\n    _classCallCheck(this, Performers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      searching: false,\n      list: [],\n      pagination: {},\n      query: {\n        limit: 10,\n        sortBy: 'updatedAt',\n        sort: 'desc'\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Performers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.search();\n    }\n  }, {\n    key: \"search\",\n    value: function () {\n      var _search = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var page,\n            pagination,\n            sorter,\n            query,\n            resp,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 1;\n                pagination = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                sorter = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n                _context.prev = 3;\n                this.setState({\n                  searching: true\n                });\n                query = _objectSpread({}, this.state.query);\n                query = _objectSpread(_objectSpread({}, query), {}, {\n                  offset: (page - 1) * query.limit\n                });\n\n                if (sorter) {\n                  query.sortBy = sorter.field || 'updatedAt';\n                  query.sort = sorter.order ? sorter.order === 'descend' ? 'desc' : 'asc' : 'desc';\n                }\n\n                _context.next = 10;\n                return performerService.searchOnline(query);\n\n              case 10:\n                resp = _context.sent;\n                this.setState({\n                  query: query,\n                  list: resp.data.data,\n                  pagination: _objectSpread(_objectSpread({}, pagination), {}, {\n                    total: resp.data.total\n                  })\n                });\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](3);\n                message.error('An error occurred, please try again!');\n\n              case 17:\n                _context.prev = 17;\n                this.setState({\n                  searching: false\n                });\n                return _context.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 14, 17, 20]]);\n      }));\n\n      function search() {\n        return _search.apply(this, arguments);\n      }\n\n      return search;\n    }()\n  }, {\n    key: \"handleTableChange\",\n    value: function () {\n      var _handleTableChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(pagination, filters, sorter) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.search(pagination.current, pagination, sorter);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleTableChange(_x, _x2, _x3) {\n        return _handleTableChange.apply(this, arguments);\n      }\n\n      return handleTableChange;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          list = _this$state.list,\n          searching = _this$state.searching,\n          pagination = _this$state.pagination;\n      var columns = [{\n        title: 'ID',\n        dataIndex: '_id'\n      }, {\n        title: 'Username',\n        dataIndex: 'username',\n        sorter: true\n      }, {\n        title: 'Email',\n        dataIndex: 'email',\n        sorter: true\n      }, {\n        title: 'Last Streaming Time',\n        dataIndex: 'lastStreamingTime',\n        render: function render(lastStreamingTime) {\n          return lastStreamingTime && getDiffToNow(lastStreamingTime);\n        },\n        sorter: true\n      }, {\n        title: 'Watching',\n        dataIndex: 'watching'\n      }];\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, \"Manage Performers\")), __jsx(BreadcrumbComponent, {\n        breadcrumbs: [{\n          title: 'Performers',\n          href: '/performer'\n        }, {\n          title: 'Models online'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }), __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, __jsx(Table, {\n        dataSource: list,\n        columns: columns,\n        rowKey: \"_id\",\n        loading: searching,\n        pagination: pagination,\n        onChange: this.handleTableChange.bind(this),\n        scroll: {\n          x: 700,\n          y: 650\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref) {\n        var ctx;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                ctx = _ref.ctx;\n                return _context3.abrupt(\"return\", ctx.query);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x4) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Performers;\n}(PureComponent);\n\nvar mapStates = function mapStates(state) {\n  return {\n    currentUser: state.user.current\n  };\n};\n\nexport default connect(mapStates)(Performers);","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/pages/studios/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { PureComponent, Fragment } from 'react';\nimport { Table, message, Dropdown, Button, Menu, Tag } from 'antd';\nimport Page from '@components/common/layout/page';\nimport { studioService } from '@services/index';\nimport { DownOutlined, EditOutlined } from '@ant-design/icons';\nimport { formatDate } from '@lib/date';\n\nvar Studios = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Studios, _PureComponent);\n\n  var _super = _createSuper(Studios);\n\n  function Studios() {\n    var _this;\n\n    _classCallCheck(this, Studios);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      pagination: {},\n      searching: false,\n      list: [],\n      limit: 10,\n      filter: {},\n      sortBy: 'updatedAt',\n      sort: 'desc'\n    });\n\n    return _this;\n  }\n\n  _createClass(Studios, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.search();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var status = this.props.status;\n\n      if (status !== prevProps.status) {\n        this.search();\n      }\n    }\n  }, {\n    key: \"search\",\n    value: function () {\n      var _search = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var page,\n            filter,\n            status,\n            query,\n            resp,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 1;\n                _context.prev = 1;\n                this.setState({\n                  searching: true\n                });\n                filter = this.state.filter;\n                status = this.props.status;\n\n                if (status) {\n                  filter.status = status;\n                } else {\n                  delete filter.status;\n                }\n\n                query = _objectSpread(_objectSpread({\n                  limit: this.state.limit,\n                  offset: (page - 1) * this.state.limit\n                }, filter), {}, {\n                  sort: this.state.sort,\n                  sortBy: this.state.sortBy\n                });\n                _context.next = 9;\n                return studioService.search(query);\n\n              case 9:\n                resp = _context.sent;\n                this.setState({\n                  filter: filter,\n                  searching: false,\n                  list: resp.data.data,\n                  pagination: _objectSpread(_objectSpread({}, this.state.pagination), {}, {\n                    pageSize: this.state.limit,\n                    total: resp.data.total\n                  })\n                });\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                message.error('An error occurred, please try again!');\n                this.setState({\n                  searching: false\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 13]]);\n      }));\n\n      function search() {\n        return _search.apply(this, arguments);\n      }\n\n      return search;\n    }()\n  }, {\n    key: \"handleTableChange\",\n    value: function () {\n      var _handleTableChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(pagination, filters, sorter) {\n        var pager;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                pager = _objectSpread({}, this.state.pagination);\n                pager.current = pagination.current;\n                _context2.next = 4;\n                return this.setState({\n                  pagination: pager,\n                  sortBy: sorter.field || 'updatedAt',\n                  sort: sorter.order ? sorter.order === 'descend' ? 'desc' : 'asc' : 'desc'\n                });\n\n              case 4:\n                this.search(pager.current);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleTableChange(_x, _x2, _x3) {\n        return _handleTableChange.apply(this, arguments);\n      }\n\n      return handleTableChange;\n    }()\n  }, {\n    key: \"handleFilter\",\n    value: function () {\n      var _handleFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(filter) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.setState({\n                  filter: filter\n                });\n\n              case 2:\n                this.search();\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleFilter(_x4) {\n        return _handleFilter.apply(this, arguments);\n      }\n\n      return handleFilter;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          list = _this$state.list,\n          searching = _this$state.searching,\n          pagination = _this$state.pagination;\n      var columns = [{\n        title: 'Name',\n        dataIndex: 'name',\n        sorter: true,\n        fixed: 'left'\n      }, {\n        title: 'Username',\n        dataIndex: 'username',\n        sorter: true,\n        fixed: 'left'\n      }, {\n        title: 'Email',\n        dataIndex: 'email',\n        sorter: true\n      }, {\n        title: 'Total Models',\n        key: 'totalModels',\n        render: function render(_ref) {\n          var _id = _ref._id,\n              stats = _ref.stats;\n          return __jsx(Link, {\n            href: '/performer?studioId=' + _id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 11\n            }\n          }, __jsx(\"a\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }\n          }, \"View \", stats.totalPerformer, \" model(s)\"));\n        }\n      }, {\n        title: 'Status',\n        dataIndex: 'status',\n        render: function render(status) {\n          switch (status) {\n            case 'active':\n              return __jsx(Tag, {\n                color: \"green\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 22\n                }\n              }, \"Active\");\n\n            case 'inactive':\n              return __jsx(Tag, {\n                color: \"red\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 22\n                }\n              }, \"Suspend\");\n\n            case 'pending-email-confirmation':\n              return __jsx(Tag, {\n                color: \"default\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 22\n                }\n              }, \"Pending\");\n          }\n\n          return __jsx(Tag, {\n            color: \"default\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 18\n            }\n          }, status);\n        }\n      }, {\n        title: 'Email Verified',\n        dataIndex: 'emailVerified',\n        render: function render(emailVerified) {\n          switch (emailVerified) {\n            case true:\n              return __jsx(Tag, {\n                color: \"green\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 22\n                }\n              }, \"Yes\");\n\n            case false:\n              return __jsx(Tag, {\n                color: \"red\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 22\n                }\n              }, \"No\");\n          }\n        }\n      }, {\n        title: 'Balance',\n        dataIndex: 'balance',\n        key: 'balance',\n        render: function render(balance) {\n          return balance.toFixed(2);\n        },\n        sorter: true\n      }, {\n        title: 'CreatedAt',\n        dataIndex: 'createdAt',\n        sorter: true,\n        render: function render(date) {\n          return __jsx(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 18\n            }\n          }, formatDate(date));\n        }\n      }, {\n        title: 'Actions',\n        dataIndex: '_id',\n        fixed: 'right',\n        render: function render(id) {\n          return __jsx(Dropdown, {\n            overlay: __jsx(Menu, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }\n            }, __jsx(Menu.Item, {\n              key: \"edit\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }\n            }, __jsx(Link, {\n              href: {\n                pathname: '/studios/update',\n                query: {\n                  id: id\n                }\n              },\n              as: \"/studios/update?id=\".concat(id),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }\n            }, __jsx(\"a\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }\n            }, __jsx(EditOutlined, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 25\n              }\n            }), \" Update\")))),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }\n          }, __jsx(Button, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }\n          }, \"Actions \", __jsx(DownOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }\n          })));\n        }\n      }];\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, \"Studios\")), __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }), __jsx(Table, {\n        dataSource: list,\n        columns: columns,\n        rowKey: \"_id\",\n        loading: searching,\n        pagination: pagination,\n        onChange: this.handleTableChange.bind(this),\n        scroll: {\n          x: 700,\n          y: 650\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref2) {\n        var ctx;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                ctx = _ref2.ctx;\n                return _context4.abrupt(\"return\", _objectSpread({}, ctx.query));\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getInitialProps(_x5) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Studios;\n}(PureComponent);\n\nexport default Studios;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/pages/photos/upload.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment, createRef } from 'react';\nimport { message } from 'antd';\nimport Page from '@components/common/layout/page';\nimport { photoService } from '@services/photo.service';\nimport { BreadcrumbComponent } from '@components/common';\nimport { FormUploadPhoto } from '@components/photo/form-upload-photo';\nimport Router from 'next/router';\n\nclass UploadPhoto extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      uploading: false,\n      preview: null,\n      uploadPercentage: 0\n    });\n\n    _defineProperty(this, \"formRef\", void 0);\n\n    _defineProperty(this, \"_photo\", void 0);\n  }\n\n  static async getInitialProps({\n    ctx\n  }) {\n    return ctx.query;\n  }\n\n  componentDidMount() {\n    if (!this.formRef) this.formRef = createRef();\n  }\n\n  setFormVal(field, val) {\n    const instance = this.formRef.current;\n    instance.setFieldsValue({\n      [field]: val\n    });\n  }\n\n  beforeUpload(file) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => this.setState({\n      preview: reader.result\n    }));\n    reader.readAsDataURL(file);\n    this._photo = file;\n    return false;\n  }\n\n  onUploading(resp) {\n    this.setState({\n      uploadPercentage: resp.percentage\n    });\n  }\n\n  async submit(data) {\n    if (!this._photo) {\n      return message.error('Please select photo!');\n    }\n\n    await this.setState({\n      uploading: true\n    });\n\n    try {\n      const resp = await photoService.uploadPhoto(this._photo, data, this.onUploading.bind(this));\n      message.success('Photo has been uploaded'); // TODO - process for response data?\n\n      await this.setState({\n        uploading: false\n      }, () => window.setTimeout(() => {\n        Router.push({\n          pathname: '/photos/update',\n          query: {\n            id: resp.data._id\n          }\n        }, `/photos/update?id=${resp.data._id}`, {\n          shallow: true\n        });\n      }, 1000));\n    } catch (error) {\n      message.error('An error occurred, please try again!');\n      await this.setState({\n        uploading: false\n      });\n    }\n  }\n\n  render() {\n    if (!this.formRef) this.formRef = createRef();\n    const {\n      uploading\n    } = this.state;\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Upload photo\")), __jsx(BreadcrumbComponent, {\n      breadcrumbs: [{\n        title: 'Photos',\n        href: '/photos'\n      }, {\n        title: 'Upload new photo'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }), __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, __jsx(FormUploadPhoto, {\n      submit: this.submit.bind(this),\n      beforeUpload: this.beforeUpload.bind(this),\n      uploading: uploading,\n      uploadPercentage: this.state.uploadPercentage,\n      galleryId: this.props.galleryId || '',\n      performerId: this.props.performerId || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default UploadPhoto;","map":null,"metadata":{},"sourceType":"module"}
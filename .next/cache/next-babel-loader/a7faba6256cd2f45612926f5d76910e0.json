{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/src/components/refund-request/table-list.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Table, Tag, Select } from 'antd';\nimport { formatDate } from 'src/lib/date';\n\nconst RefundRequestTable = ({\n  rowKey,\n  data,\n  loading,\n  pagination,\n  onChange,\n  updateStatus\n}) => {\n  const columns = [{\n    title: 'User',\n    dataIndex: 'userId',\n    key: 'userId',\n\n    // sorter: true,\n    render(data, record) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, record.userInfo && record.userInfo.username || 'N/A');\n    }\n\n  }, {\n    title: 'Performer',\n    dataIndex: 'performerId',\n    key: 'performerId',\n\n    // sorter: true,\n    render(data, record) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, record.performerInfo && record.performerInfo.username || 'N/A');\n    }\n\n  }, {\n    title: 'Product',\n    dataIndex: 'sourceId',\n    key: 'sourceId',\n\n    // sorter: true,\n    render(data, record) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, record.productInfo && record.productInfo.name || 'N/A');\n    }\n\n  }, {\n    title: 'Qty',\n    dataIndex: 'sourceId',\n\n    render(data, record) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }\n      }, record.orderInfo && record.orderInfo.quantity || 'N/A');\n    }\n\n  }, {\n    title: 'Token',\n    dataIndex: 'token',\n    align: 'center',\n    key: 'token',\n    sorter: true,\n\n    render(data, record) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }\n      }, data);\n    }\n\n  }, {\n    title: 'Order Number',\n    align: 'center',\n\n    render(data, record) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }\n      }, record.orderInfo && record.orderInfo.orderNumber || 'N/A');\n    }\n\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    align: 'center',\n    filters: [{\n      text: 'Pending',\n      value: 'pending'\n    }, {\n      text: 'Resolved',\n      value: 'resolved'\n    }, {\n      text: 'Rejected',\n      value: 'rejected'\n    }],\n    onFilter: (value, record) => record.status.includes(value),\n\n    render(status) {\n      switch (status) {\n        case 'resolved':\n          return __jsx(Tag, {\n            color: \"green\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 20\n            }\n          }, \"Resolved\");\n\n        case 'pending':\n          return __jsx(Tag, {\n            color: \"warning\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 20\n            }\n          }, \"Pending\");\n\n        case 'rejected':\n          return __jsx(Tag, {\n            color: \"volcano\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 20\n            }\n          }, \"Rejected\");\n      }\n    }\n\n  }, {\n    title: 'Last updated at',\n    dataIndex: 'updatedAt',\n    key: 'updatedAt',\n    sorter: true,\n\n    render(date) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 16\n        }\n      }, formatDate(date));\n    }\n\n  }, {\n    title: 'Actions',\n    dataIndex: '_id',\n    fixed: 'right',\n    render: (data, record) => {\n      return __jsx(Select, {\n        onChange: value => {\n          updateStatus(record._id, value);\n        },\n        defaultValue: record.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, __jsx(Select.Option, {\n        key: \"pending\",\n        value: \"pending\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, \"Pending\"), __jsx(Select.Option, {\n        key: \"resolved\",\n        value: \"resolved\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, \"Resolved\"), __jsx(Select.Option, {\n        key: \"rejected\",\n        value: \"rejected\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, \"Rejected\"));\n    }\n  }];\n  return __jsx(Table, {\n    columns: columns,\n    rowKey: rowKey,\n    dataSource: data,\n    loading: loading,\n    pagination: pagination,\n    onChange: onChange.bind(this),\n    scroll: {\n      x: 700,\n      y: 650\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default RefundRequestTable;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/src/components/post/select-post-dropdown.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport { Select } from 'antd';\nimport { sortBy } from 'lodash';\nimport { postService } from '@services/post.service';\nconst {\n  Option\n} = Select;\nexport class SelectPostDropdown extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_initalData\", []);\n\n    _defineProperty(this, \"state\", {\n      data: []\n    });\n\n    _defineProperty(this, \"handleSearch\", value => {\n      const q = value.toLowerCase();\n\n      const filtered = this._initalData.filter(p => {\n        return p.slug.includes(q) || (p.title || '').toLowerCase().includes(q);\n      });\n\n      this.setState({\n        data: filtered\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadPosts();\n  }\n\n  async loadPosts(q) {\n    // TODO - should check for better option?\n    const resp = await postService.search({\n      limit: 1000\n    });\n    this._initalData = sortBy(resp.data.data, i => i.slug);\n    this.setState({\n      data: [...this._initalData]\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    const {\n      disabled,\n      value,\n      defaultValue,\n      onSelect\n    } = this.props;\n    return __jsx(Select, {\n      showSearch: true,\n      value: value,\n      placeholder: this.props.placeholder,\n      style: this.props.style,\n      defaultActiveFirstOption: false,\n      showArrow: true,\n      filterOption: false,\n      onSearch: this.handleSearch,\n      onChange: value => onSelect(value, data.find(d => d._id === value)),\n      notFoundContent: null,\n      defaultValue: defaultValue,\n      disabled: disabled,\n      allowClear: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, this.state.data.map(p => __jsx(Option, {\n      key: p._id,\n      value: p._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, p.slug), \" / \", __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 43\n      }\n    }, p.title)))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
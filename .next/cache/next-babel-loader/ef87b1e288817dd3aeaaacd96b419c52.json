{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/pages/token-package/update.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Breadcrumb, message } from 'antd';\nimport { HomeOutlined } from '@ant-design/icons';\nimport Page from '@components/common/layout/page';\nimport Loader from '@components/common/base/loader';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { PureComponent } from 'react';\nimport { tokenPackageService } from 'src/services';\nimport Router from \"next/router\";\nimport { getResponseError } from '@lib/utils';\nimport { FormTokenPackage } from 'src/components/token-package/form';\n\nclass TokenPackageUpdatePage extends PureComponent {\n  static async getInitialProps({\n    ctx\n  }) {\n    return ctx.query;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitting: false,\n      loading: true,\n      tokenPackage: {}\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.id) {\n      message.error(\"Package not found!\");\n      Router.push(\"/token-package\");\n    }\n\n    this.getData();\n  }\n\n  async getData() {\n    const resp = await tokenPackageService.findOne(this.props.id);\n    await this.setState({\n      loading: false,\n      tokenPackage: resp.data\n    });\n  }\n\n  handleUpdate(data) {\n    console.log(data);\n    this.setState({\n      submitting: true\n    });\n    tokenPackageService.update(this.props.id, data).then(() => {\n      message.success(\"Updated successfully\");\n      Router.push(\"/token-package\");\n    }).catch(e => {\n      const err = Promise.resolve(e);\n      message.error(getResponseError(err));\n      this.setState({\n        submitting: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      tokenPackage\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Update Token Package\")), __jsx(\"div\", {\n      style: {\n        marginBottom: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, __jsx(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, __jsx(Breadcrumb.Item, {\n      href: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, __jsx(HomeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    })), __jsx(Breadcrumb.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: '/token-package',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, 'Token Packages'))), __jsx(Breadcrumb.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Update Token Package\"))), __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, loading ? __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }) : __jsx(FormTokenPackage, _extends({\n      onFinish: this.handleUpdate.bind(this),\n      submitting: this.state.submitting,\n      tokenPackage: tokenPackage\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 34\n      }\n    }))));\n  }\n\n}\n\nexport default TokenPackageUpdatePage;","map":null,"metadata":{},"sourceType":"module"}
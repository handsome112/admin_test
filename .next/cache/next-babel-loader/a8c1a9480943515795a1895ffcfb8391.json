{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/src/components/earning/table-list.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { formatId } from '@lib/string';\nimport { Table, Tag } from 'antd';\nimport { formatDate } from 'src/lib/date';\n\nconst EarningTable = ({\n  dataSource,\n  rowKey,\n  loading,\n  onChange,\n  pagination\n}) => {\n  const column = [{\n    title: 'Transaction',\n    dataIndex: 'transactionTokenId',\n    key: 'transaction',\n    render: transactionTokenId => formatId(transactionTokenId)\n  }, {\n    title: 'From',\n    dataIndex: 'userId',\n    key: 'user',\n\n    render(_, record) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, record.sourceInfo && record.sourceInfo.username || 'N/A');\n    }\n\n  }, {\n    title: 'To',\n    dataIndex: 'performerId',\n    key: 'owner',\n\n    render(_, record) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, record.targetInfo && record.targetInfo.username || 'N/A');\n    }\n\n  }, {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n\n    render(type) {\n      switch (type) {\n        case 'sale_video':\n          return __jsx(Tag, {\n            color: \"magenta\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 20\n            }\n          }, \"Sale Video\");\n\n        case 'sale_product':\n          return __jsx(Tag, {\n            color: \"volcano\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 20\n            }\n          }, \"Sale Product\");\n\n        case 'sale_photo':\n          return __jsx(Tag, {\n            color: \"orange\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 20\n            }\n          }, \"Sale Photo\");\n\n        case 'tip':\n          return __jsx(Tag, {\n            color: \"gold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 20\n            }\n          }, \"Tip\");\n\n        case 'stream_private':\n          return __jsx(Tag, {\n            color: \"blue\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 20\n            }\n          }, \"Private\");\n\n        case 'stream_group':\n          return __jsx(Tag, {\n            color: \"green\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 20\n            }\n          }, \"Group\");\n\n        default:\n          return __jsx(Tag, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 20\n            }\n          }, type);\n      }\n    }\n\n  }, {\n    title: 'Tokens',\n    dataIndex: 'netPrice',\n    key: 'netPrice',\n    render: netPrice => netPrice.toFixed(2)\n  }, {\n    title: 'Percent',\n    dataIndex: 'commission',\n    key: 'commission',\n\n    render(commission) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }\n      }, commission, \"%\");\n    }\n\n  }, {\n    title: 'Conversion Rate',\n    dataIndex: 'conversionRate',\n    key: 'conversionRate'\n  }, {\n    title: 'Earned',\n    key: 'earned',\n    render: ({\n      netPrice,\n      conversionRate\n    }) => (netPrice * conversionRate).toFixed(2)\n  }, {\n    title: 'Is Paid',\n    dataIndex: 'isPaid',\n    key: 'isPaid',\n\n    render(isPaid) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, isPaid ? __jsx(Tag, {\n        color: \"green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, \"Yes\") : __jsx(Tag, {\n        color: \"orange\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, \"No\"));\n    }\n\n  }, {\n    title: 'Date',\n    key: 'createdAt',\n    dataIndex: 'createdAt',\n    render: createdAt => formatDate(createdAt),\n    sorter: true\n  }];\n  return __jsx(React.Fragment, null, __jsx(Table, {\n    columns: column,\n    dataSource: dataSource,\n    rowKey: rowKey,\n    loading: loading,\n    onChange: onChange.bind(this),\n    pagination: pagination,\n    scroll: {\n      x: 1300,\n      y: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default EarningTable;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/pages/photos/upload.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment, createRef } from 'react';\nimport { message } from 'antd';\nimport Page from '@components/common/layout/page';\nimport { photoService } from '@services/photo.service';\nimport { BreadcrumbComponent } from '@components/common';\nimport { FormUploadPhoto } from '@components/photo/form-upload-photo';\nimport Router from 'next/router';\n\nvar UploadPhoto = /*#__PURE__*/function (_PureComponent) {\n  _inherits(UploadPhoto, _PureComponent);\n\n  var _super = _createSuper(UploadPhoto);\n\n  function UploadPhoto() {\n    var _this;\n\n    _classCallCheck(this, UploadPhoto);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      uploading: false,\n      preview: null,\n      uploadPercentage: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_photo\", void 0);\n\n    return _this;\n  }\n\n  _createClass(UploadPhoto, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.formRef) this.formRef = createRef();\n    }\n  }, {\n    key: \"setFormVal\",\n    value: function setFormVal(field, val) {\n      var instance = this.formRef.current;\n      instance.setFieldsValue(_defineProperty({}, field, val));\n    }\n  }, {\n    key: \"beforeUpload\",\n    value: function beforeUpload(file) {\n      var _this2 = this;\n\n      var reader = new FileReader();\n      reader.addEventListener('load', function () {\n        return _this2.setState({\n          preview: reader.result\n        });\n      });\n      reader.readAsDataURL(file);\n      this._photo = file;\n      return false;\n    }\n  }, {\n    key: \"onUploading\",\n    value: function onUploading(resp) {\n      this.setState({\n        uploadPercentage: resp.percentage\n      });\n    }\n  }, {\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this._photo) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", message.error('Please select photo!'));\n\n              case 2:\n                _context.next = 4;\n                return this.setState({\n                  uploading: true\n                });\n\n              case 4:\n                _context.prev = 4;\n                _context.next = 7;\n                return photoService.uploadPhoto(this._photo, data, this.onUploading.bind(this));\n\n              case 7:\n                resp = _context.sent;\n                message.success('Photo has been uploaded'); // TODO - process for response data?\n\n                _context.next = 11;\n                return this.setState({\n                  uploading: false\n                }, function () {\n                  return window.setTimeout(function () {\n                    Router.push({\n                      pathname: '/photos/update',\n                      query: {\n                        id: resp.data._id\n                      }\n                    }, \"/photos/update?id=\".concat(resp.data._id), {\n                      shallow: true\n                    });\n                  }, 1000);\n                });\n\n              case 11:\n                _context.next = 18;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](4);\n                message.error('An error occurred, please try again!');\n                _context.next = 18;\n                return this.setState({\n                  uploading: false\n                });\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 13]]);\n      }));\n\n      function submit(_x) {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.formRef) this.formRef = createRef();\n      var uploading = this.state.uploading;\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, \"Upload photo\")), __jsx(BreadcrumbComponent, {\n        breadcrumbs: [{\n          title: 'Photos',\n          href: '/photos'\n        }, {\n          title: 'Upload new photo'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }), __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, __jsx(FormUploadPhoto, {\n        submit: this.submit.bind(this),\n        beforeUpload: this.beforeUpload.bind(this),\n        uploading: uploading,\n        uploadPercentage: this.state.uploadPercentage,\n        galleryId: this.props.galleryId || '',\n        performerId: this.props.performerId || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n        var ctx;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ctx = _ref.ctx;\n                return _context2.abrupt(\"return\", ctx.query);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return UploadPhoto;\n}(PureComponent);\n\nexport default UploadPhoto;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/pages/studios/create.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment } from 'react';\nimport { message, Tabs } from 'antd';\nimport Page from '@components/common/layout/page';\nimport Router from 'next/router';\nimport { studioService, performerCategoryService } from '@services/index';\nimport { utilsService } from '@services/utils.service';\nimport { validateUsername, getResponseError } from '@lib/utils';\nimport StudioAccountForm from '@components/studio/studio-account-form';\nimport { BreadcrumbComponent } from '@components/common';\nimport { omit } from 'lodash';\n\nclass StudioCreate extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      creating: false,\n      fetching: false\n    });\n\n    _defineProperty(this, \"_document\", void 0);\n\n    _defineProperty(this, \"customFields\", {});\n  }\n\n  static async getInitialProps() {\n    const [countries, categories] = await Promise.all([utilsService.countriesList(), utilsService.languagesList(), performerCategoryService.search({\n      sortBy: 'ordering',\n      sort: 'asc',\n      limit: 100\n    })]);\n    return {\n      countries: countries.data\n    };\n  }\n\n  onBeforeUpload(file) {\n    this._document = file;\n  }\n\n  async submit(data) {\n    try {\n      if (data.password !== data.rePassword) {\n        return message.error('Confirm password mismatch!');\n      }\n\n      if (!validateUsername(data.username)) {\n        return message.error('Username is invalid!');\n      }\n\n      data = omit(data, ['rePassword']);\n      this.setState({\n        creating: true\n      });\n      const resp = await studioService.create(_objectSpread(_objectSpread({}, data), this.customFields));\n      Router.push({\n        pathname: '/studios'\n      }, `/studios`, {\n        shallow: false\n      });\n    } catch (e) {\n      const err = (await Promise.resolve(e)) || {};\n      message.error(getResponseError(err) || 'An error occurred, please try again!');\n    } finally {\n      this.setState({\n        creating: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      creating\n    } = this.state;\n    const {\n      countries\n    } = this.props;\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Create Studio\")), __jsx(BreadcrumbComponent, {\n      breadcrumbs: [{\n        title: 'Studio',\n        href: '/studios'\n      }, {\n        title: 'Create new Studio'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, __jsx(Tabs, {\n      defaultActiveKey: \"basic\",\n      tabPosition: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, __jsx(Tabs.TabPane, {\n      tab: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 32\n        }\n      }, \"General info\"),\n      key: \"basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, __jsx(StudioAccountForm, {\n      onFinish: this.submit.bind(this),\n      submiting: creating,\n      countries: countries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default StudioCreate;","map":null,"metadata":{},"sourceType":"module"}
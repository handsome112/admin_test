{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/src/components/performer/Document.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport { Form, Button } from 'antd';\nimport { performerService, authService } from '@services/index';\nimport { FileUpload } from '@components/file/file-upload';\nconst layout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nexport class PerformerDocument extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      idVerificationUrl: this.props.performer && this.props.performer.idVerification ? this.props.performer.idVerification.url : '',\n      documentVerificationUrl: this.props.performer && this.props.performer.documentVerification ? this.props.performer.documentVerification.url : '',\n      releaseFormUrl: this.props.performer && this.props.performer.releaseForm ? this.props.performer.releaseForm.url : ''\n    });\n  }\n\n  render() {\n    const {\n      onUploaded,\n      onFormRefSubmit,\n      submiting,\n      update\n    } = this.props;\n    const {\n      idVerificationUrl,\n      documentVerificationUrl,\n      releaseFormUrl\n    } = this.state;\n    const uploadHeaders = {\n      authorization: authService.getToken()\n    };\n    return __jsx(Form, _extends({}, layout, {\n      name: \"form-performer\",\n      onFinish: () => onFormRefSubmit(),\n      initialValues: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }), __jsx(\"div\", {\n      key: \"verificationId\",\n      className: \"ant-row ant-form-item ant-form-item-with-help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: update === true ? \"ant-col ant-col-lg-10 ant-col-md-10  ant-col-sm-12 ant-form-item-label\" : \"ant-col ant-col-lg-8 ant-col-md-10  ant-col-sm-12 ant-form-item-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"ID For Verification\")), __jsx(\"div\", {\n      className: \"ant-col ant-col-16 ant-form-item-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, __jsx(FileUpload, {\n      uploadUrl: performerService.getUploadDocumentUrl(),\n      headers: uploadHeaders,\n      onUploaded: resp => {\n        this.setState({\n          idVerificationUrl: resp.response.data.url\n        });\n        onUploaded('idVerificationId', resp);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), idVerificationUrl && __jsx(\"a\", {\n      target: \"_blank\",\n      href: idVerificationUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"ID For Verification Link \"))), __jsx(\"div\", {\n      key: \"documentVerificationId\",\n      className: \"ant-row ant-form-item ant-form-item-with-help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: update === true ? \"ant-col ant-col-lg-10 ant-col-md-10  ant-col-sm-12 ant-form-item-label\" : \"ant-col ant-col-lg-8 ant-col-md-10  ant-col-sm-12 ant-form-item-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"Document For Verification\")), __jsx(\"div\", {\n      className: \"ant-col ant-col-16 ant-form-item-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, __jsx(FileUpload, {\n      uploadUrl: performerService.getUploadDocumentUrl(),\n      headers: uploadHeaders,\n      onUploaded: resp => {\n        this.setState({\n          documentVerificationUrl: resp.response.data.url\n        });\n        onUploaded('documentVerificationId', resp);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }), documentVerificationUrl && __jsx(\"a\", {\n      target: \"_blank\",\n      href: documentVerificationUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, \"Document For Verification\"))), __jsx(\"div\", {\n      key: \"releaseForm\",\n      className: \"ant-row ant-form-item ant-form-item-with-help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: update === true ? \"ant-col ant-col-lg-10 ant-col-md-10  ant-col-sm-12 ant-form-item-label\" : \"ant-col ant-col-lg-8 ant-col-md-10  ant-col-sm-12 ant-form-item-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Release Form\")), __jsx(\"div\", {\n      className: \"ant-col ant-col-16 ant-form-item-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, __jsx(FileUpload, {\n      uploadUrl: performerService.getUploadDocumentUrl(),\n      headers: uploadHeaders,\n      onUploaded: resp => {\n        this.setState({\n          releaseFormUrl: resp.response.data.url\n        });\n        onUploaded('releaseFormId', resp);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), releaseFormUrl && __jsx(\"a\", {\n      target: \"_blank\",\n      href: releaseFormUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 32\n      }\n    }, \"Release Form\"))), __jsx(Form.Item, {\n      wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n        offset: 4\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: submiting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
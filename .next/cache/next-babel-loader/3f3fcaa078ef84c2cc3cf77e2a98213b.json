{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/src/components/wysiwyg/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from \"react\";\nimport { EditorState, ContentState, convertToRaw } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport draftToHtml from \"draftjs-to-html\";\nimport htmlToDraft from \"html-to-draftjs\";\nimport \"../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nfunction uploadImageCallBack(file) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\n    const data = new FormData();\n    data.append(\"image\", file);\n    xhr.send(data);\n    xhr.addEventListener(\"load\", () => {\n      const response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener(\"error\", () => {\n      const error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\n\nexport default class WYSIWYG extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onEditorStateChange\", editorState => {\n      this.props.onChange && this.props.onChange({\n        html: draftToHtml(convertToRaw(editorState.getCurrentContent()))\n      });\n      this.setState({\n        editorState\n      });\n    });\n\n    if (this.props.html) {\n      const blocksFromHtml = htmlToDraft(this.props.html);\n      const {\n        contentBlocks,\n        entityMap\n      } = blocksFromHtml;\n      const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\n      this.state = {\n        editorState: EditorState.createWithContent(contentState)\n      };\n    } else {\n      this.state = {\n        editorState: EditorState.createEmpty()\n      };\n    }\n  }\n\n  render() {\n    const {\n      editorState\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"editor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, __jsx(Editor, {\n      editorState: editorState,\n      wrapperClassName: \"wysityg-wrapper\",\n      editorClassName: \"wysityg-editor\",\n      onEditorStateChange: this.onEditorStateChange,\n      toolbar: {// image: {\n        //   uploadCallback: uploadImageCallBack,\n        //   alt: { present: true, mandatory: true }\n        // }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
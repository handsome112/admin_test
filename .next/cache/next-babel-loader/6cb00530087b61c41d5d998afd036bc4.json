{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/src/components/studio/studio-account-form.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport { Form, Input, Button, Select, Switch, message, InputNumber } from 'antd';\nvar layout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nvar validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  },\n  number: {\n    range: 'Must be between ${min} and ${max}'\n  }\n};\n\nvar StudioAccountForm = /*#__PURE__*/function (_PureComponent) {\n  _inherits(StudioAccountForm, _PureComponent);\n\n  var _super = _createSuper(StudioAccountForm);\n\n  function StudioAccountForm() {\n    var _this;\n\n    _classCallCheck(this, StudioAccountForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false\n    });\n\n    return _this;\n  }\n\n  _createClass(StudioAccountForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          studio = _this$props.studio,\n          onFinish = _this$props.onFinish,\n          submiting = _this$props.submiting,\n          countries = _this$props.countries;\n      return __jsx(Form, _extends({}, layout, {\n        name: \"form-performer\",\n        onFinish: onFinish,\n        onFinishFailed: function onFinishFailed() {\n          return message.error('Please complete the required fields in tab general info');\n        },\n        validateMessages: validateMessages,\n        initialValues: studio ? studio : {\n          country: 'US',\n          status: 'active',\n          emailVerified: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }), __jsx(Form.Item, {\n        name: \"name\",\n        label: \"Studio name\",\n        rules: [{\n          pattern: new RegExp('^[a-zA-Z0-9 ]*$'),\n          message: 'Studio name must according to Alphanumeric formating'\n        }, {\n          whitespace: true,\n          message: 'Please input your Studio name!'\n        }, {\n          required: true,\n          message: 'Please input your Studio name!'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, __jsx(Input, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        name: \"username\",\n        label: \"User Name\",\n        rules: [{\n          pattern: new RegExp('^[a-zA-Z0-9 ]*$'),\n          message: 'User name must according to Alphanumeric formating'\n        }, {\n          whitespace: true,\n          message: 'Please input your user name!'\n        }, {\n          required: true,\n          message: 'Please input your user name!'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, __jsx(Input, {\n        placeholder: \"Username name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        name: \"email\",\n        label: \"Email Address\",\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, __jsx(Input, {\n        placeholder: \"studio@example.com\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      })), !studio && [__jsx(Form.Item, {\n        key: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        rules: [{\n          required: true\n        }, {\n          min: 6\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, __jsx(Input.Password, {\n        placeholder: \"Performer password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      })), __jsx(Form.Item, {\n        key: \"rePassword\",\n        name: \"rePassword\",\n        label: \"Confirm password\",\n        rules: [{\n          required: true\n        }, {\n          min: 6\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }, __jsx(Input.Password, {\n        placeholder: \"Confirm performer password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }))], __jsx(Form.Item, {\n        name: \"country\",\n        label: \"Country\",\n        rules: [{\n          required: true\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, __jsx(Select, {\n        showSearch: true,\n        filterOption: function filterOption(input, option) {\n          return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }, countries.map(function (country) {\n        return __jsx(Select.Option, {\n          key: country.code,\n          value: country.code,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }\n        }, country.name);\n      }))), !studio && [__jsx(Form.Item, {\n        name: \"commission\",\n        label: \"Commission\",\n        rules: [{\n          validator: function validator(_, value) {\n            if (parseInt(value) > 0 && parseInt(value) < 100) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject('Value must be greater than 0 and less than 100');\n          }\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }, __jsx(InputNumber, {\n        min: 1,\n        max: 99,\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }))], __jsx(Form.Item, {\n        name: \"status\",\n        label: \"Status\",\n        rules: [{\n          required: true\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, __jsx(Select, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }, __jsx(Select.Option, {\n        key: \"active\",\n        value: \"active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, \"Active\"), __jsx(Select.Option, {\n        key: \"inactive\",\n        value: \"inactive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, \"Inactive\"))), __jsx(Form.Item, {\n        name: \"emailVerified\",\n        label: \"Verified Email\",\n        valuePropName: \"checked\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, __jsx(Switch, {\n        defaultChecked: studio && studio.emailVerified ? studio.emailVerified : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n          offset: 4\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: submiting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, \"Submit\")));\n    }\n  }]);\n\n  return StudioAccountForm;\n}(PureComponent);\n\nexport { StudioAccountForm as default };","map":null,"metadata":{},"sourceType":"module"}
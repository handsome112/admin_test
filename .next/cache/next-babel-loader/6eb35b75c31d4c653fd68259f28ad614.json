{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/src/components/menu/table-list.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport { Table } from 'antd';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { formatDate } from '@lib/date';\nimport Link from 'next/link';\nimport { DropdownAction } from '@components/common/dropdown-action';\nexport var TableListMenu = /*#__PURE__*/function (_PureComponent) {\n  _inherits(TableListMenu, _PureComponent);\n\n  var _super = _createSuper(TableListMenu);\n\n  function TableListMenu() {\n    _classCallCheck(this, TableListMenu);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TableListMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var columns = [{\n        title: 'Title',\n        dataIndex: 'title',\n        sorter: true\n      }, {\n        title: 'Path',\n        dataIndex: 'path',\n        sorter: true\n      }, {\n        title: 'Ordering',\n        dataIndex: 'ordering',\n        sorter: true\n      }, // {\n      //   title: 'Public',\n      //   dataIndex: 'public',\n      //   sorter: true,\n      //   render(isPublic: boolean) {\n      //     switch (isPublic) {\n      //       case true:\n      //         return <Tag color=\"green\">Yes</Tag>;\n      //       case false:\n      //         return <Tag color=\"red\">No</Tag>;\n      //     }\n      //   }\n      // },\n      {\n        title: 'Last update',\n        dataIndex: 'updatedAt',\n        sorter: true,\n        render: function render(date) {\n          return __jsx(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 18\n            }\n          }, formatDate(date));\n        }\n      }, {\n        title: 'Actions',\n        dataIndex: '_id',\n        fixed: 'right',\n        render: function render(data, record) {\n          return __jsx(DropdownAction, {\n            menuOptions: [{\n              key: 'update',\n              name: 'Update',\n              children: __jsx(Link, {\n                href: {\n                  pathname: '/menu/update',\n                  query: {\n                    id: record._id\n                  }\n                },\n                as: \"/menu/update?id=\".concat(record._id),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }\n              }, __jsx(\"a\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }\n              }, __jsx(EditOutlined, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 25\n                }\n              }), \" Update\"))\n            }, {\n              key: 'delete',\n              name: 'Delete',\n              children: __jsx(\"span\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }\n              }, __jsx(DeleteOutlined, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }\n              }), \" Delete\"),\n              onClick: function onClick() {\n                return _this.props.deleteMenu && _this.props.deleteMenu(record._id);\n              }\n            }],\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }\n          });\n        }\n      }];\n      var _this$props = this.props,\n          dataSource = _this$props.dataSource,\n          rowKey = _this$props.rowKey,\n          loading = _this$props.loading,\n          pagination = _this$props.pagination,\n          onChange = _this$props.onChange;\n      return __jsx(Table, {\n        dataSource: dataSource,\n        columns: columns,\n        rowKey: rowKey,\n        loading: loading,\n        pagination: pagination,\n        onChange: onChange.bind(this),\n        scroll: {\n          x: 700,\n          y: 650\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return TableListMenu;\n}(PureComponent);","map":null,"metadata":{},"sourceType":"module"}
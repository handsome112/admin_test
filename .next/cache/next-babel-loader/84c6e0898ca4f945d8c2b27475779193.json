{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/pages/performer/create.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment, createRef } from 'react';\nimport { message, Tabs } from 'antd';\nimport Page from '@components/common/layout/page';\nimport Router from 'next/router';\nimport { performerService, performerCategoryService } from '@services/index';\nimport { utilsService } from '@services/utils.service';\nimport { validateUsername, getResponseError } from '@lib/utils';\nimport { AccountForm } from '@components/performer/AccountForm';\nimport { PerformerDocument } from '@components/performer/Document';\nimport { PerformerSchedule } from '@components/performer/Schedule';\nimport { SocialsForm } from '@components/performer/socialsForm';\nimport { BreadcrumbComponent } from '@components/common';\nimport { CommissionSettingForm } from '@components/performer/commission-setting';\nvar layout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nvar PerformerCreate = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PerformerCreate, _PureComponent);\n\n  var _super = _createSuper(PerformerCreate);\n\n  function PerformerCreate() {\n    var _this;\n\n    _classCallCheck(this, PerformerCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      creating: false,\n      fetching: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"customFields\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"scheduleValue\", {\n      mon: {\n        start: '00:00',\n        end: '',\n        closed: true\n      },\n      tue: {\n        start: '00:00',\n        end: '',\n        closed: true\n      },\n      wed: {\n        start: '00:00',\n        end: '',\n        closed: true\n      },\n      thu: {\n        start: '00:00',\n        end: '',\n        closed: true\n      },\n      fri: {\n        start: '00:00',\n        end: '',\n        closed: true\n      },\n      sat: {\n        start: '00:00',\n        end: '',\n        closed: true\n      },\n      sun: {\n        start: '00:00',\n        end: '',\n        closed: true\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dates\", []);\n\n    return _this;\n  }\n\n  _createClass(PerformerCreate, [{\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        var resp, err;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(data.password !== data.rePassword)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", message.error('Confirm password mismatch!'));\n\n              case 3:\n                if (validateUsername(data.username)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", message.error('Username is invalid!'));\n\n              case 5:\n                this.setState({\n                  creating: true\n                });\n                _context.next = 8;\n                return performerService.create(_objectSpread(_objectSpread(_objectSpread({}, data), this.customFields), {}, {\n                  schedule: this.scheduleValue\n                }));\n\n              case 8:\n                resp = _context.sent;\n                message.success('Updated successfully');\n                Router.push({\n                  pathname: '/performer/update',\n                  query: {\n                    id: resp.data._id\n                  }\n                }, \"/performer/update?id=\".concat(resp.data._id), {\n                  shallow: false\n                });\n                _context.next = 22;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                _context.next = 17;\n                return Promise.resolve(_context.t0);\n\n              case 17:\n                _context.t1 = _context.sent;\n\n                if (_context.t1) {\n                  _context.next = 20;\n                  break;\n                }\n\n                _context.t1 = {};\n\n              case 20:\n                err = _context.t1;\n                message.error(getResponseError(err) || 'An error occurred, please try again!');\n\n              case 22:\n                _context.prev = 22;\n                this.setState({\n                  creating: false\n                });\n                return _context.finish(22);\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 13, 22, 25]]);\n      }));\n\n      function submit(_x) {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  }, {\n    key: \"onUploaded\",\n    value: function onUploaded(field, resp) {\n      this.customFields[field] = resp.response.data._id;\n    }\n  }, {\n    key: \"onFormRefSubmit\",\n    value: function onFormRefSubmit() {\n      this.formRef.formRefSubmit();\n    }\n  }, {\n    key: \"onChangeTime\",\n    value: function onChangeTime(dates, dateStrings, key) {\n      this.dates = dates;\n      var start = dateStrings[0];\n      var end = dateStrings[1];\n      var objectKey = this.scheduleValue[key];\n      objectKey['start'] = start;\n      objectKey['end'] = end;\n      this.scheduleValue[key] = _objectSpread(_objectSpread({}, this.scheduleValue[key]), objectKey);\n    }\n  }, {\n    key: \"onChangeCloded\",\n    value: function onChangeCloded(checked, key) {\n      var objectKey = this.scheduleValue[key];\n      objectKey['closed'] = checked;\n      this.scheduleValue[key] = _objectSpread(_objectSpread({}, this.scheduleValue[key]), objectKey);\n    }\n  }, {\n    key: \"onCreateSocials\",\n    value: function onCreateSocials(values) {\n      this.customFields['socials'] = values;\n    }\n  }, {\n    key: \"onCreateCommissionSetting\",\n    value: function onCreateCommissionSetting(values) {\n      this.customFields['commissionSetting'] = values;\n      this.onFormRefSubmit();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var creating = this.state.creating;\n      var _this$props = this.props,\n          countries = _this$props.countries,\n          languages = _this$props.languages,\n          categories = _this$props.categories;\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }, \"Create performer\")), __jsx(BreadcrumbComponent, {\n        breadcrumbs: [{\n          title: 'Performers',\n          href: '/performer'\n        }, {\n          title: 'Create new performer'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }), __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, __jsx(Tabs, _extends({\n        defaultActiveKey: \"basic\",\n        tabPosition: \"left\"\n      }, layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 32\n          }\n        }, \"General info\"),\n        key: \"basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, __jsx(AccountForm, {\n        ref: function ref(el) {\n          return _this2.formRef = el;\n        },\n        onUploaded: this.onUploaded.bind(this),\n        onFinish: this.submit.bind(this),\n        submiting: creating,\n        countries: countries,\n        languages: languages,\n        categories: categories,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }\n      })), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 32\n          }\n        }, \"Socials\"),\n        key: \"socials\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, __jsx(SocialsForm, {\n        ref: function ref(el) {\n          return _this2.formRef = el;\n        },\n        socials: null,\n        onFinish: this.onCreateSocials.bind(this),\n        submiting: creating,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      })), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 32\n          }\n        }, \"Document\"),\n        key: \"document\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, __jsx(PerformerDocument, {\n        update: false,\n        onUploaded: this.onUploaded.bind(this),\n        submiting: creating,\n        onFormRefSubmit: this.onFormRefSubmit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      })), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 32\n          }\n        }, \"Schedule\"),\n        key: \"schedule\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }, __jsx(PerformerSchedule, {\n        onChangeCloded: this.onChangeCloded.bind(this),\n        onChangeTime: this.onChangeTime.bind(this),\n        scheduleValue: this.scheduleValue,\n        submiting: creating,\n        onFormRefSubmit: this.onFormRefSubmit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }\n      })), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 20\n          }\n        }, \"Commission Setting\"),\n        key: \"commission\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, __jsx(CommissionSettingForm, {\n        submiting: creating,\n        onFinish: this.onCreateCommissionSetting.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _yield$Promise$all, _yield$Promise$all2, countries, languages, categories;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Promise.all([utilsService.countriesList(), utilsService.languagesList(), performerCategoryService.search({\n                  sortBy: 'ordering',\n                  sort: 'asc',\n                  limit: 100\n                })]);\n\n              case 2:\n                _yield$Promise$all = _context2.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n                countries = _yield$Promise$all2[0];\n                languages = _yield$Promise$all2[1];\n                categories = _yield$Promise$all2[2];\n                return _context2.abrupt(\"return\", {\n                  countries: countries.data,\n                  languages: languages.data,\n                  categories: categories.data && categories.data.data ? categories.data.data : []\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return PerformerCreate;\n}(PureComponent);\n\nexport default PerformerCreate;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/pages/posts/update.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment } from 'react';\nimport Page from '@components/common/layout/page';\nimport dynamic from 'next/dynamic';\nimport { Form, Input, Select, Button, Breadcrumb, message } from 'antd';\nimport { HomeOutlined } from '@ant-design/icons';\nimport { postService } from '@services/post.service';\nimport Loader from '@components/common/base/loader';\nconst WYSIWYG = dynamic(() => import('@components/wysiwyg'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('@components/wysiwyg')],\n    modules: ['@components/wysiwyg']\n  }\n});\n\nclass PostUpdate extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_content\", '');\n\n    _defineProperty(this, \"state\", {\n      submitting: false,\n      fetching: true,\n      post: null\n    });\n  }\n\n  static async getInitialProps({\n    ctx\n  }) {\n    const query = ctx.query;\n\n    if (!query.type) {\n      query.type = 'post';\n    }\n\n    return query;\n  }\n\n  async componentDidMount() {\n    try {\n      const resp = await postService.findById(this.props.id);\n      this._content = resp.data.content;\n      this.setState({\n        post: resp.data\n      });\n    } catch (e) {\n      message.error('Post not found!');\n    } finally {\n      this.setState({\n        fetching: false\n      });\n    }\n  }\n\n  async submit(data) {\n    try {\n      this.setState({\n        submitting: true\n      });\n\n      const submitData = _objectSpread(_objectSpread({}, data), {}, {\n        content: this._content\n      });\n\n      await postService.update(this.props.id, submitData);\n      message.success('Updated successfully');\n      this.setState({\n        submitting: false\n      });\n    } catch (e) {\n      // TODO - check and show error here\n      message.error('Something went wrong, please try again!');\n      this.setState({\n        submitting: false\n      });\n    }\n  }\n\n  contentChange(content) {\n    this._content = content.html;\n  }\n\n  render() {\n    const {\n      post\n    } = this.state;\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Update post\")), __jsx(\"div\", {\n      style: {\n        marginBottom: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, __jsx(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, __jsx(Breadcrumb.Item, {\n      href: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, __jsx(HomeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    })), __jsx(Breadcrumb.Item, {\n      href: \"/posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"Posts\")), post && __jsx(Breadcrumb.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 22\n      }\n    }, post.title), __jsx(Breadcrumb.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Update\"))), __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, !post ? __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }) : __jsx(Form, {\n      onFinish: this.submit.bind(this),\n      initialValues: post,\n      labelCol: {\n        span: 4\n      },\n      wrapperCol: {\n        span: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"title\",\n      rules: [{\n        required: true,\n        message: 'Please input title!'\n      }],\n      label: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      placeholder: \"Enter your title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    })), __jsx(Form.Item, {\n      name: \"slug\",\n      label: \"Slug\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      placeholder: \"Custom friendly slug\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    })), __jsx(Form.Item, {\n      name: \"shortDescription\",\n      label: \"Short description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, __jsx(Input.TextArea, {\n      rows: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    })), __jsx(Form.Item, {\n      label: \"Content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, __jsx(WYSIWYG, {\n      onChange: this.contentChange.bind(this),\n      html: this._content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    })), __jsx(Form.Item, {\n      name: \"status\",\n      label: \"Status\",\n      rules: [{\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, __jsx(Select.Option, {\n      value: \"published\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, \"Publish\"), __jsx(Select.Option, {\n      value: \"draft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, \"Draft\"))), __jsx(Form.Item, {\n      wrapperCol: {\n        offset: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        float: 'right'\n      },\n      loading: this.state.submitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default PostUpdate;","map":null,"metadata":{},"sourceType":"module"}
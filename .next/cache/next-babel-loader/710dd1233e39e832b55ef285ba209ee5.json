{"ast":null,"code":"import moment from 'moment';\nexport function formatDate(date) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'DD/MM/YYYY HH:mm:ss';\n  return moment(date).format(format);\n}\nexport function getDiffToNow(date) {\n  return moment(date).fromNow(true);\n}\nexport function formatTime(seconds, format) {\n  var h = Math.floor(seconds / 3600);\n  var hours = h < 10 ? \"0\".concat(h) : h;\n  var remaining1 = seconds % 3600;\n  var m = Math.floor(remaining1 / 60);\n  var minutes = m < 10 ? \"0\".concat(m) : m;\n  var remaining2 = remaining1 % 60;\n  var remainingSecs = remaining2 < 10 ? \"0\".concat(remaining2) : remaining2;\n\n  if (format === 'HH:mm') {\n    return \"\".concat(hours, \":\").concat(minutes);\n  }\n\n  return \"\".concat(hours, \":\").concat(minutes, \":\").concat(remainingSecs);\n}\nexport function convertMiliSecsToSecs(miliSeconds) {\n  var seconds = Math.floor(miliSeconds / 1000);\n  var h = Math.floor(seconds / 3600);\n  var hours = h < 10 ? \"0\".concat(h) : h;\n  var remaining1 = seconds % 3600;\n  var m = Math.floor(remaining1 / 60);\n  var minutes = m < 10 ? \"0\".concat(m) : m;\n  var remaining2 = remaining1 % 60;\n  var remainingSecs = remaining2 < 10 ? \"0\".concat(remaining2) : remaining2;\n  return \"\".concat(hours, \":\").concat(minutes, \":\").concat(remainingSecs);\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { merge } from 'lodash';\nimport { updateUIValue, loadUIValue } from './actions';\nimport { createReducers } from '@lib/redux'; // TODO - \n\nvar initialState = {\n  collapsed: false,\n  theme: 'light',\n  siteName: 'Admin panel',\n  logo: '/logo-white.svg',\n  fixedHeader: false\n};\nvar uiReducers = [{\n  on: updateUIValue,\n  reducer: function reducer(state, data) {\n    if (true) {\n      Object.keys(data.payload).forEach(function (key) {\n        return localStorage && localStorage.setItem(key, data.payload[key]);\n      });\n    }\n\n    return Object.assign(_objectSpread({}, state), data.payload);\n  }\n}, {\n  on: loadUIValue,\n  reducer: function reducer(state) {\n    var newVal = {};\n\n    if (true) {\n      Object.keys(initialState).forEach(function (key) {\n        var val = localStorage.getItem(key);\n\n        if (val) {\n          newVal[key] = val === 'false' ? false : val;\n        }\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, state), newVal);\n  }\n}];\nexport default merge({}, createReducers('ui', [uiReducers], initialState));","map":null,"metadata":{},"sourceType":"module"}
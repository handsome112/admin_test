{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/src/components/product/form-product.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent, createRef, Fragment } from 'react';\nimport { Form, Input, InputNumber, Select, Upload, Button, message, Progress, Radio } from 'antd';\nimport { UploadOutlined, FileOutlined } from '@ant-design/icons';\nimport { SelectPerformerDropdown } from '@components/performer/common/select-performer-dropdown';\nimport { ImageProduct } from '@components/product/image-product';\nvar layout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nvar validateMessages = {\n  required: 'This field is required!'\n};\nvar radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px'\n};\nexport var FormProduct = /*#__PURE__*/function (_PureComponent) {\n  _inherits(FormProduct, _PureComponent);\n\n  var _super = _createSuper(FormProduct);\n\n  function FormProduct() {\n    var _this;\n\n    _classCallCheck(this, FormProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      previewImageProduct: null,\n      isDigitalProduct: false,\n      digitalProductName: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", void 0);\n\n    return _this;\n  }\n\n  _createClass(FormProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.formRef) this.formRef = createRef();\n      var product = this.props.product;\n\n      if (product && product.type === 'digital') {\n        this.setState({\n          isDigitalProduct: true\n        });\n      }\n    }\n  }, {\n    key: \"setFormVal\",\n    value: function setFormVal(field, val) {\n      var instance = this.formRef.current;\n      instance.setFieldsValue(_defineProperty({}, field, val));\n\n      if (field === 'type') {\n        this.setState({\n          isDigitalProduct: val === 'digital'\n        });\n      }\n    }\n  }, {\n    key: \"beforeUpload\",\n    value: function beforeUpload(file, field) {\n      var _this2 = this;\n\n      if (field === 'image') {\n        var reader = new FileReader();\n        reader.addEventListener('load', function () {\n          return _this2.setState({\n            previewImageProduct: reader.result\n          });\n        });\n        reader.readAsDataURL(file);\n      }\n\n      if (field === 'digitalFile') this.setState({\n        digitalProductName: file.name\n      });\n      this.props.beforeUpload(file, field);\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.formRef) this.formRef = createRef();\n      var _this$props = this.props,\n          product = _this$props.product,\n          submit = _this$props.submit,\n          uploading = _this$props.uploading,\n          uploadPercentage = _this$props.uploadPercentage;\n      var _this$state = this.state,\n          previewImageProduct = _this$state.previewImageProduct,\n          isDigitalProduct = _this$state.isDigitalProduct,\n          digitalProductName = _this$state.digitalProductName;\n      var haveProduct = product ? true : false;\n      return __jsx(Form, _extends({}, layout, {\n        onFinish: submit && submit.bind(this),\n        onFinishFailed: function onFinishFailed() {\n          return message.error('Please complete the required fields');\n        },\n        name: \"form-upload\",\n        ref: this.formRef,\n        validateMessages: validateMessages,\n        initialValues: product ? product : {\n          name: '',\n          token: 0,\n          description: '',\n          status: 'active',\n          performerId: '',\n          stock: 0,\n          type: 'physical'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }), __jsx(Form.Item, {\n        name: \"performerId\",\n        label: \"Performer\",\n        rules: [{\n          required: true\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, __jsx(SelectPerformerDropdown, {\n        disabled: haveProduct,\n        defaultValue: product && product.performerId,\n        onSelect: function onSelect(val) {\n          return _this3.setFormVal('performerId', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: 'Please input name of product!'\n        }],\n        label: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, __jsx(Input, {\n        placeholder: \"Enter product name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        name: \"token\",\n        label: \"Token\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, __jsx(InputNumber, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      })), !isDigitalProduct && __jsx(Form.Item, {\n        name: \"stock\",\n        label: \"Stock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, __jsx(InputNumber, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      })), __jsx(Form.Item, {\n        name: \"description\",\n        label: \"Description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, __jsx(Input.TextArea, {\n        rows: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        name: \"type\",\n        label: \"Type\",\n        rules: [{\n          required: true,\n          message: 'Please select type!'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, __jsx(Select, {\n        onChange: function onChange(val) {\n          return _this3.setFormVal('type', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      }, __jsx(Select.Option, {\n        key: \"physical\",\n        value: \"physical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, \"Physical\"), __jsx(Select.Option, {\n        key: \"digital\",\n        value: \"digital\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, \"Digital\"))), __jsx(Form.Item, {\n        name: \"publish\",\n        label: \"Publish\",\n        rules: [{\n          required: true,\n          message: 'Please check status'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }, __jsx(Radio.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, __jsx(Radio, {\n        style: radioStyle,\n        value: true,\n        key: \"publish\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, \"Yes\"), __jsx(Radio, {\n        style: radioStyle,\n        value: false,\n        key: \"unpublish\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, \"No\"))), __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        key: \"image\",\n        className: \"ant-row ant-form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"ant-col ant-col-4 ant-form-item-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }, \"Image\")), __jsx(\"div\", {\n        className: \"ant-col ant-col-16 ant-form-item-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }\n      }, __jsx(Upload, {\n        accept: \"image/*\",\n        multiple: false,\n        showUploadList: false,\n        disabled: uploading,\n        beforeUpload: function beforeUpload(file) {\n          return _this3.beforeUpload(file, 'image');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }\n      }, previewImageProduct ? __jsx(\"img\", {\n        src: previewImageProduct,\n        alt: \"file\",\n        style: {\n          width: '250px',\n          marginBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }\n      }) : product ? __jsx(ImageProduct, {\n        product: product,\n        style: {\n          width: '250px',\n          marginBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 19\n        }\n      }) : null, __jsx(\"div\", {\n        style: {\n          clear: 'both'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }\n      }), __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }\n      }, __jsx(UploadOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 19\n        }\n      }), \" Select File\")))), isDigitalProduct && __jsx(\"div\", {\n        key: \"digital-product\",\n        className: \"ant-row ant-form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"ant-col ant-col-4 ant-form-item-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }, \"Digital Product\")), __jsx(\"div\", {\n        className: \"ant-col ant-col-16 ant-form-item-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }\n      }, __jsx(Upload, {\n        multiple: false,\n        showUploadList: false,\n        disabled: uploading || haveProduct,\n        beforeUpload: function beforeUpload(file) {\n          return _this3.beforeUpload(file, 'digitalFile');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, digitalProductName && __jsx(\"div\", {\n        className: \"ant-upload-list ant-upload-list-picture\",\n        style: {\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"ant-upload-list-item ant-upload-list-item-done ant-upload-list-item-list-type-picture\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 23\n        }\n      }, __jsx(\"div\", {\n        className: \"ant-upload-list-item-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 27\n        }\n      }, __jsx(\"a\", {\n        className: \"ant-upload-list-item-thumbnail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 29\n        }\n      }, __jsx(FileOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 31\n        }\n      })), __jsx(\"a\", {\n        className: \"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 29\n        }\n      }, digitalProductName))))), __jsx(\"div\", {\n        style: {\n          clear: 'both'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 19\n        }\n      }), __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 19\n        }\n      }, __jsx(UploadOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }\n      }), \" Select File\")), uploadPercentage ? __jsx(Progress, {\n        percent: uploadPercentage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 19\n        }\n      }) : null))), __jsx(Form.Item, {\n        wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n          offset: 4\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: uploading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }\n      }, haveProduct ? 'Update' : 'Upload')));\n    }\n  }]);\n\n  return FormProduct;\n}(PureComponent);","map":null,"metadata":{},"sourceType":"module"}
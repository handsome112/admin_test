{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/var/www/admin.dtest.live/src/components/payout-request/table-list.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Table, Tag } from 'antd';\nimport { formatDate } from 'src/lib/date';\nimport Link from 'next/link';\nimport { EyeOutlined } from '@ant-design/icons';\n\nvar PayoutRequestTable = function PayoutRequestTable(_ref) {\n  var rowKey = _ref.rowKey,\n      data = _ref.data,\n      loading = _ref.loading,\n      pagination = _ref.pagination,\n      onChange = _ref.onChange;\n  var columns = [{\n    title: 'From',\n    key: 'username',\n    // sorter: true,\n    render: function render(_, record) {\n      var _record$performerInfo, _record$studioInfo;\n\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, ((_record$performerInfo = record.performerInfo) === null || _record$performerInfo === void 0 ? void 0 : _record$performerInfo.username) || ((_record$studioInfo = record.studioInfo) === null || _record$studioInfo === void 0 ? void 0 : _record$studioInfo.username) || 'N/A');\n    }\n  }, {\n    title: 'Pay Period',\n    dataIndex: 'fromDate',\n    key: 'fromDate',\n    render: function render(data, record) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, formatDate(record.fromDate, 'DD/MM/YYYY'), \" -\", ' ', formatDate(record.toDate, 'DD/MM/YYYY'));\n    }\n  }, {\n    title: 'Total Token',\n    dataIndex: 'tokenMustPay',\n    align: 'center',\n    key: 'tokenMustPay',\n    sorter: true\n  }, {\n    title: 'Paid Token',\n    dataIndex: 'previousPaidOut',\n    align: 'center',\n    key: 'pendingToken',\n    sorter: true\n  }, {\n    title: 'Remaining Token',\n    dataIndex: 'pendingToken',\n    align: 'center',\n    key: 'pendingToken',\n    sorter: true\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    align: 'center',\n    // sotrter: true,\n    // filterMultiple: false,\n    // filters: [\n    // { text: 'Pending', value: 'pending' },\n    // { text: 'Resolved', value: 'resolved' },\n    // { text: 'Rejected', value: 'rejected' },\n    // { text: 'Done', value: 'done' }\n    // ],\n    // onFilter: (value: string, record: IPayoutRequest) =>\n    //   record.status.includes(value),\n    render: function render(status) {\n      switch (status) {\n        case 'approved':\n          return __jsx(Tag, {\n            color: \"blue\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 20\n            }\n          }, \"Approved\");\n\n        case 'pending':\n          return __jsx(Tag, {\n            color: \"warning\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 20\n            }\n          }, \"Pending\");\n\n        case 'rejected':\n          return __jsx(Tag, {\n            color: \"volcano\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 20\n            }\n          }, \"Rejected\");\n\n        case 'done':\n          return __jsx(Tag, {\n            color: \"green\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 20\n            }\n          }, \"Done\");\n      }\n    }\n  }, {\n    title: 'Created At',\n    dataIndex: 'createdAt',\n    key: 'createdAt',\n    sorter: true,\n    render: function render(date) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 16\n        }\n      }, formatDate(date));\n    }\n  }, {\n    title: 'Actions',\n    dataIndex: '_id',\n    fixed: 'right',\n    sorter: true,\n    render: function render(id) {\n      return __jsx(Link, {\n        href: {\n          pathname: '/payout-request/detail',\n          query: {\n            id: id\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, __jsx(EyeOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      })));\n    }\n  }];\n  return __jsx(Table, {\n    columns: columns,\n    rowKey: rowKey,\n    dataSource: data,\n    loading: loading,\n    pagination: pagination,\n    onChange: onChange.bind(_this),\n    scroll: {\n      x: 700,\n      y: 650\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default PayoutRequestTable;","map":null,"metadata":{},"sourceType":"module"}
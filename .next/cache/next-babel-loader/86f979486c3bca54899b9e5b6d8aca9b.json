{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/pages/performer/update.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment, createRef } from 'react';\nimport { Tabs, message } from 'antd';\nimport Page from '@components/common/layout/page';\nimport { AccountForm } from '@components/performer/AccountForm';\nimport { PerformerDocument } from '@components/performer/Document';\nimport { PerformerSchedule } from '@components/performer/Schedule';\nimport nextCookie from 'next-cookies';\nimport { authService, performerService, performerCategoryService, studioService } from '@services/index';\nimport Loader from '@components/common/base/loader';\nimport { utilsService } from '@services/utils.service';\nimport { UpdatePaswordForm } from '@components/user/update-password-form';\nimport { BreadcrumbComponent } from '@components/common';\nimport { SocialsForm } from '@components/performer/socialsForm';\nimport { CommissionSettingForm } from '@components/performer/commission-setting';\nvar layout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nvar PerformerUpdate = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PerformerUpdate, _PureComponent);\n\n  var _super = _createSuper(PerformerUpdate);\n\n  function PerformerUpdate() {\n    var _this;\n\n    _classCallCheck(this, PerformerUpdate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      pwUpdating: false,\n      updating: false,\n      fetching: false,\n      performer: {},\n      settingUpdating: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"customFields\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"scheduleValue\", {\n      mon: {\n        start: '00:00',\n        end: '',\n        closed: true\n      },\n      tue: {\n        start: '00:00',\n        end: '',\n        closed: true\n      },\n      wed: {\n        start: '00:00',\n        end: '',\n        closed: true\n      },\n      thu: {\n        start: '00:00',\n        end: '',\n        closed: true\n      },\n      fri: {\n        start: '00:00',\n        end: '',\n        closed: true\n      },\n      sat: {\n        start: '00:00',\n        end: '',\n        closed: true\n      },\n      sun: {\n        start: '00:00',\n        end: '',\n        closed: true\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dates\", null);\n\n    return _this;\n  }\n\n  _createClass(PerformerUpdate, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.setState({\n                  fetching: true\n                });\n                _context.next = 4;\n                return performerService.findById(this.props.id);\n\n              case 4:\n                resp = _context.sent;\n                this.setState({\n                  performer: resp.data\n                });\n\n                if (resp.data && resp.data.schedule) {\n                  this.scheduleValue = _objectSpread(_objectSpread({}, this.scheduleValue), resp.data.schedule);\n                }\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                message.error('Error while fecting performer!');\n\n              case 12:\n                _context.prev = 12;\n                this.setState({\n                  fetching: false\n                });\n                return _context.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9, 12, 15]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        var updated;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                this.setState({\n                  updating: true\n                });\n                _context2.next = 4;\n                return performerService.update(this.props.id, _objectSpread(_objectSpread(_objectSpread({}, data), this.customFields), {}, {\n                  schedule: this.scheduleValue\n                }));\n\n              case 4:\n                updated = _context2.sent;\n                this.setState({\n                  performer: updated.data\n                });\n                message.success('Updated successfully');\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                // TODO - exact error message\n                message.error('An error occurred, please try again!');\n\n              case 12:\n                _context2.prev = 12;\n                this.setState({\n                  updating: false\n                });\n                return _context2.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 9, 12, 15]]);\n      }));\n\n      function submit(_x) {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  }, {\n    key: \"updatePassword\",\n    value: function () {\n      var _updatePassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                this.setState({\n                  pwUpdating: true\n                });\n                _context3.next = 4;\n                return authService.updatePassword(data.password, this.props.id, 'performer');\n\n              case 4:\n                message.success('Password has been updated!');\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                message.error('An error occurred, please try again!');\n\n              case 10:\n                _context3.prev = 10;\n                this.setState({\n                  pwUpdating: false\n                });\n                return _context3.finish(10);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7, 10, 13]]);\n      }));\n\n      function updatePassword(_x2) {\n        return _updatePassword.apply(this, arguments);\n      }\n\n      return updatePassword;\n    }()\n  }, {\n    key: \"onUploaded\",\n    value: function onUploaded(field, resp) {\n      this.customFields[field] = resp.response.data._id;\n    }\n  }, {\n    key: \"onUpdateSocials\",\n    value: function onUpdateSocials(values) {\n      var performer = this.state.performer;\n\n      var data = _objectSpread(_objectSpread({}, performer), values);\n\n      this.submit(data);\n    }\n  }, {\n    key: \"onFormRefSubmit\",\n    value: function onFormRefSubmit() {\n      this.formRef.formRefSubmit();\n    }\n  }, {\n    key: \"onChangeTime\",\n    value: function onChangeTime(dates, dateStrings, key) {\n      this.dates = dates;\n      var start = dateStrings[0];\n      var end = dateStrings[1];\n      var objectKey = this.scheduleValue[key];\n      objectKey['start'] = start;\n      objectKey['end'] = end;\n      this.scheduleValue[key] = _objectSpread(_objectSpread({}, this.scheduleValue[key]), objectKey);\n    }\n  }, {\n    key: \"onChangeCloded\",\n    value: function onChangeCloded(checked, key) {\n      var objectKey = this.scheduleValue[key];\n      objectKey['closed'] = checked;\n      this.scheduleValue[key] = _objectSpread(_objectSpread({}, this.scheduleValue[key]), objectKey);\n    }\n  }, {\n    key: \"updateCommissionSetting\",\n    value: function () {\n      var _updateCommissionSetting = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                this.setState({\n                  settingUpdating: true\n                });\n                _context4.next = 4;\n                return performerService.updateCommissionSetting(this.props.id, _objectSpread(_objectSpread({}, data), {}, {\n                  performerId: this.props.id\n                }));\n\n              case 4:\n                message.success('Commission setting has been updated!');\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                message.error('An error occurred, please try again!');\n\n              case 10:\n                _context4.prev = 10;\n                this.setState({\n                  settingUpdating: false\n                });\n                return _context4.finish(10);\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 7, 10, 13]]);\n      }));\n\n      function updateCommissionSetting(_x3) {\n        return _updateCommissionSetting.apply(this, arguments);\n      }\n\n      return updateCommissionSetting;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          pwUpdating = _this$state.pwUpdating,\n          performer = _this$state.performer,\n          updating = _this$state.updating,\n          fetching = _this$state.fetching,\n          settingUpdating = _this$state.settingUpdating;\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }\n      }, \"Performer update\")), __jsx(BreadcrumbComponent, {\n        breadcrumbs: [{\n          title: 'Performers',\n          href: '/performer'\n        }, {\n          title: performer.username\n        }, {\n          title: 'Update'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }\n      }), __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }\n      }, fetching ? __jsx(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }) : __jsx(Tabs, _extends({\n        defaultActiveKey: \"basic\",\n        tabPosition: \"left\"\n      }, layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 34\n          }\n        }, \"General info\"),\n        key: \"basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }\n      }, __jsx(AccountForm, _extends({\n        ref: function ref(el) {\n          return _this2.formRef = el;\n        },\n        onUploaded: this.onUploaded.bind(this),\n        onFinish: this.submit.bind(this),\n        performer: performer,\n        submiting: updating\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }\n      }))), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 34\n          }\n        }, \"Socials\"),\n        key: \"socials\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }\n      }, __jsx(SocialsForm, {\n        ref: function ref(el) {\n          return _this2.formRef = el;\n        },\n        socials: performer.socials ? performer.socials : {},\n        onFinish: this.onUpdateSocials.bind(this),\n        submiting: updating,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }\n      })), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 34\n          }\n        }, \"Change password\"),\n        key: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }\n      }, __jsx(UpdatePaswordForm, {\n        onFinish: this.updatePassword.bind(this),\n        updating: pwUpdating,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }\n      })), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 34\n          }\n        }, \"Document\"),\n        key: \"document\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }\n      }, __jsx(PerformerDocument, {\n        update: true,\n        submiting: updating,\n        onUploaded: this.onUploaded.bind(this),\n        onFormRefSubmit: this.onFormRefSubmit.bind(this),\n        performer: performer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }\n      })), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 34\n          }\n        }, \"Schedule\"),\n        key: \"schedule\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }\n      }, __jsx(PerformerSchedule, {\n        scheduleValue: this.scheduleValue,\n        onChangeTime: this.onChangeTime.bind(this),\n        submiting: updating,\n        onFormRefSubmit: this.onFormRefSubmit.bind(this),\n        onChangeCloded: this.onChangeCloded.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }\n      })), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 22\n          }\n        }, \"Commission Setting\"),\n        key: \"commission\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }\n      }, __jsx(CommissionSettingForm, {\n        submiting: settingUpdating,\n        onFinish: this.updateCommissionSetting.bind(this),\n        commissionSetting: performer.commissionSetting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref) {\n        var ctx, _nextCookie, token, _yield$Promise$all, _yield$Promise$all2, countries, languages, phoneCodes, categories, studios, error;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                ctx = _ref.ctx;\n                _context5.prev = 1;\n                _nextCookie = nextCookie(ctx), token = _nextCookie.token;\n                _context5.next = 5;\n                return Promise.all([utilsService.countriesList(), utilsService.languagesList(), utilsService.phoneCodesList(), performerCategoryService.search({\n                  sortBy: 'ordering',\n                  sort: 'asc',\n                  limit: 100\n                }), studioService.search({\n                  limit: 100\n                }, {\n                  Authorization: token\n                })]);\n\n              case 5:\n                _yield$Promise$all = _context5.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 5);\n                countries = _yield$Promise$all2[0];\n                languages = _yield$Promise$all2[1];\n                phoneCodes = _yield$Promise$all2[2];\n                categories = _yield$Promise$all2[3];\n                studios = _yield$Promise$all2[4];\n                return _context5.abrupt(\"return\", _objectSpread({\n                  countries: countries.data,\n                  languages: languages.data,\n                  phoneCodes: phoneCodes.data,\n                  studios: studios.data.data,\n                  categories: categories.data && categories.data.data ? categories.data.data : []\n                }, ctx.query));\n\n              case 15:\n                _context5.prev = 15;\n                _context5.t0 = _context5[\"catch\"](1);\n                _context5.next = 19;\n                return Promise.resolve(_context5.t0);\n\n              case 19:\n                error = _context5.sent;\n                console.log(error);\n                return _context5.abrupt(\"return\");\n\n              case 22:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 15]]);\n      }));\n\n      function getInitialProps(_x4) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return PerformerUpdate;\n}(PureComponent);\n\nexport default PerformerUpdate;","map":null,"metadata":{},"sourceType":"module"}
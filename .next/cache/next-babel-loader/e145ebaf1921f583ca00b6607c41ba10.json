{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/pages/photos/bulk-upload.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment, createRef } from 'react';\nimport { Form, message, Button, Select, Col, Row, Upload } from 'antd';\nimport Page from '@components/common/layout/page';\nimport { SelectPerformerDropdown } from '@components/performer/common/select-performer-dropdown';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { photoService } from '@services/photo.service';\nimport UploadList from '@components/file/upload-list';\nimport { SelectGalleryDropdown } from '@components/gallery/common/select-gallery-dropdown';\nimport { galleryService } from '@services/gallery.service';\nimport Router from 'next/router';\nvar layout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nvar validateMessages = {\n  required: 'This field is required!'\n};\nvar Dragger = Upload.Dragger;\n\nvar BulkUploadPhoto = /*#__PURE__*/function (_PureComponent) {\n  _inherits(BulkUploadPhoto, _PureComponent);\n\n  var _super = _createSuper(BulkUploadPhoto);\n\n  function BulkUploadPhoto() {\n    var _this;\n\n    _classCallCheck(this, BulkUploadPhoto);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      uploading: false,\n      preview: null,\n      uploadPercentage: 0,\n      fileList: [],\n      galleries: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"uploadRef\", void 0);\n\n    return _this;\n  }\n\n  _createClass(BulkUploadPhoto, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.formRef) this.formRef = createRef();\n      if (!this.uploadRef) this.uploadRef = createRef();\n      this.props.performerId && this.findGalleries(this.props.performerId);\n    }\n  }, {\n    key: \"findGalleries\",\n    value: function () {\n      var _findGalleries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(performerId) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return galleryService.search({\n                  performerId: performerId,\n                  limit: 1000\n                });\n\n              case 2:\n                resp = _context.sent;\n                this.setState({\n                  galleries: resp.data.data || []\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function findGalleries(_x) {\n        return _findGalleries.apply(this, arguments);\n      }\n\n      return findGalleries;\n    }()\n  }, {\n    key: \"setFormVal\",\n    value: function setFormVal(field, val) {\n      var instance = this.formRef.current;\n      instance.setFieldsValue(_defineProperty({}, field, val));\n      if (field === 'performerId') this.findGalleries(val);\n    }\n  }, {\n    key: \"beforeUpload\",\n    value: function () {\n      var _beforeUpload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(file, fileList) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Promise.all(fileList.map(function (file) {\n                  var ext = file.name.split('.').pop().toLowerCase();\n                  var isImageAccept = process.env.NEXT_PUBLIC_IMAGE_ACCPET.split(',').map(function (item) {\n                    return item.trim();\n                  }).indexOf(\".\".concat(ext));\n                  var isLt2M = file.size / 1024 / 1024 < (process.env.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_IMAGE || 2);\n\n                  if (isImageAccept === -1 || !isLt2M) {\n                    fileList.splice(fileList.findIndex(function (f) {\n                      return f.uid === file.uid;\n                    }), 1);\n                  }\n                }));\n\n              case 2:\n                _context2.next = 4;\n                return this.setState({\n                  fileList: fileList\n                });\n\n              case 4:\n                return _context2.abrupt(\"return\", false);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function beforeUpload(_x2, _x3) {\n        return _beforeUpload.apply(this, arguments);\n      }\n\n      return beforeUpload;\n    }()\n  }, {\n    key: \"onUploading\",\n    value: function onUploading(file, resp) {\n      this.setState({\n        uploadPercentage: resp.percentage\n      });\n      file.percent = resp.percentage;\n      if (file.percent === 100) file.status = 'done';\n      this.forceUpdate();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(file) {\n      var fileList = this.state.fileList;\n      fileList.splice(fileList.findIndex(function (f) {\n        return f.uid === file.uid;\n      }), 1);\n      this.setState({\n        fileList: fileList\n      });\n      this.forceUpdate();\n    }\n  }, {\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n        var uploadFiles, _iterator, _step, file;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.state.fileList.length) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", message.error('Please select photo!'));\n\n              case 2:\n                uploadFiles = this.state.fileList.filter(function (f) {\n                  return !['uploading', 'done'].includes(f.status);\n                });\n\n                if (uploadFiles.length) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", message.error('Please select new file!'));\n\n              case 5:\n                _context3.next = 7;\n                return this.setState({\n                  uploading: true\n                });\n\n              case 7:\n                _iterator = _createForOfIteratorHelper(uploadFiles);\n                _context3.prev = 8;\n\n                _iterator.s();\n\n              case 10:\n                if ((_step = _iterator.n()).done) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                file = _step.value;\n                _context3.prev = 12;\n\n                if (!['uploading', 'done'].includes(file.status)) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                return _context3.abrupt(\"continue\", 24);\n\n              case 15:\n                file.status = 'uploading';\n                _context3.next = 18;\n                return photoService.uploadPhoto(file, data, this.onUploading.bind(this, file));\n\n              case 18:\n                _context3.next = 24;\n                break;\n\n              case 20:\n                _context3.prev = 20;\n                _context3.t0 = _context3[\"catch\"](12);\n                file.status = 'error';\n                message.error(\"File \".concat(file.name, \" error!\"));\n\n              case 24:\n                _context3.next = 10;\n                break;\n\n              case 26:\n                _context3.next = 31;\n                break;\n\n              case 28:\n                _context3.prev = 28;\n                _context3.t1 = _context3[\"catch\"](8);\n\n                _iterator.e(_context3.t1);\n\n              case 31:\n                _context3.prev = 31;\n\n                _iterator.f();\n\n                return _context3.finish(31);\n\n              case 34:\n                message.success('Photos has been uploaded!');\n                _context3.next = 37;\n                return this.setState({\n                  uploading: false\n                }, function () {\n                  return window.setTimeout(function () {\n                    Router.push('/photos');\n                  }, 1000);\n                });\n\n              case 37:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[8, 28, 31, 34], [12, 20]]);\n      }));\n\n      function submit(_x4) {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.formRef) this.formRef = createRef();\n      if (!this.uploadRef) this.uploadRef = createRef();\n      var _this$state = this.state,\n          uploading = _this$state.uploading,\n          fileList = _this$state.fileList;\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }, \"Upload photo\")), __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }, __jsx(Form, _extends({}, layout, {\n        onFinish: this.submit.bind(this),\n        validateMessages: validateMessages,\n        ref: this.formRef,\n        initialValues: {\n          status: 'draft',\n          token: 0,\n          performerId: this.props.performerId || '',\n          galleryId: this.props.galleryId || ''\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }), __jsx(Form.Item, {\n        name: \"performerId\",\n        label: \"Performer\",\n        rules: [{\n          required: true\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, __jsx(SelectPerformerDropdown, {\n        onSelect: function onSelect(val) {\n          return _this2.setFormVal('performerId', val);\n        },\n        disabled: uploading,\n        defaultValue: this.props.performerId || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Item, {\n        name: \"galleryId\",\n        label: \"Gallery\",\n        rules: [{\n          required: true,\n          message: 'Please select a gallery'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }, __jsx(SelectGalleryDropdown, {\n        galleries: this.state.galleries,\n        disabled: this.state.galleries.length <= 0,\n        onSelect: function onSelect(val) {\n          return _this2.setFormVal('galleryId', val);\n        },\n        defaultValue: this.props.galleryId || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Item, {\n        name: \"status\",\n        label: \"Default status\",\n        rules: [{\n          required: true\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, __jsx(Select, {\n        disabled: uploading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      }, __jsx(Select.Option, {\n        value: \"draft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }, \"Draft\"), __jsx(Select.Option, {\n        key: \"active\",\n        value: \"active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }, \"Active\"), __jsx(Select.Option, {\n        key: \"inactive\",\n        value: \"inactive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, \"Inactive\"))), __jsx(Row, {\n        className: \"ant-form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, __jsx(Col, {\n        span: 4,\n        className: \"ant-form-item-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }\n      }, __jsx(\"label\", {\n        className: \"ant-form-item-required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, \"Photos\")), __jsx(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, __jsx(Dragger // accept={process.env.NEXT_PUBLIC_IMAGE_ACCPET || 'image/*'}\n      , {\n        beforeUpload: this.beforeUpload.bind(this),\n        multiple: true,\n        showUploadList: false,\n        disabled: uploading,\n        listType: \"picture\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 19\n        }\n      }, __jsx(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }\n      }, __jsx(UploadOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 23\n        }\n      })), __jsx(\"p\", {\n        className: \"ant-upload-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }\n      }, \"Click or drag file to this area to upload\"), __jsx(\"p\", {\n        className: \"ant-upload-hint\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }, \"Support image file only. Image must smaller than\", ' ', process.env.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_IMAGE || 2, \"MB! Only accept \", process.env.NEXT_PUBLIC_IMAGE_ACCPET, \".\")), __jsx(UploadList, {\n        files: fileList,\n        remove: this.remove.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 19\n        }\n      })))), __jsx(Form.Item, {\n        wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n          offset: 4\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: uploading,\n        disabled: uploading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }\n      }, \"Upload\")))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref) {\n        var ctx;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                ctx = _ref.ctx;\n                return _context4.abrupt(\"return\", ctx.query);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getInitialProps(_x5) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return BulkUploadPhoto;\n}(PureComponent);\n\nexport default BulkUploadPhoto;","map":null,"metadata":{},"sourceType":"module"}
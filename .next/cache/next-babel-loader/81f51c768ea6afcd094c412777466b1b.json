{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/src/components/video/form-upload-video.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent, createRef, Fragment } from 'react';\nimport { Form, Input, InputNumber, Select, Upload, Button, message, Progress, Switch } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { SelectPerformerDropdown } from '@components/performer/common/select-performer-dropdown';\nimport { ThumbnailVideo } from '@components/video/thumbnail-video';\nvar layout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nvar validateMessages = {\n  required: 'This field is required!'\n};\nexport var FormUploadVideo = /*#__PURE__*/function (_PureComponent) {\n  _inherits(FormUploadVideo, _PureComponent);\n\n  var _super = _createSuper(FormUploadVideo);\n\n  function FormUploadVideo() {\n    var _this;\n\n    _classCallCheck(this, FormUploadVideo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      previewThumbnail: null,\n      previewVideo: null,\n      isSale: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", void 0);\n\n    return _this;\n  }\n\n  _createClass(FormUploadVideo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!this.formRef) this.formRef = createRef();\n      var video = this.props.video;\n\n      if (video) {\n        this.setState({\n          previewThumbnail: video.thumbnail ? video.thumbnail : null,\n          previewVideo: video.video && video.video.url ? video.video.url : null,\n          isSale: !!video.isSaleVideo\n        }, function () {\n          if (_this2.state.previewVideo) {\n            var _video = document.getElementById('video');\n\n            _video.setAttribute('src', _this2.state.previewVideo);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"setFormVal\",\n    value: function setFormVal(field, val) {\n      var instance = this.formRef.current;\n      instance.setFieldsValue(_defineProperty({}, field, val));\n    }\n  }, {\n    key: \"beforeUpload\",\n    value: function beforeUpload(file, field) {\n      var _this3 = this;\n\n      var reader = new FileReader();\n      reader.addEventListener('load', function () {\n        return _this3.setState(field === 'thumbnail' ? {\n          previewThumbnail: reader.result\n        } : {\n          previewVideo: reader.result\n        }, function () {\n          if (field === 'video') {\n            var video = document.getElementById('video');\n            video.setAttribute('src', reader.result.toString());\n          }\n        });\n      });\n      reader.readAsDataURL(file);\n      this.props.beforeUpload(file, field);\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      if (!this.formRef) this.formRef = createRef();\n      var _this$props = this.props,\n          video = _this$props.video,\n          submit = _this$props.submit,\n          uploading = _this$props.uploading,\n          uploadPercentage = _this$props.uploadPercentage;\n      var _this$state = this.state,\n          previewThumbnail = _this$state.previewThumbnail,\n          previewVideo = _this$state.previewVideo,\n          isSale = _this$state.isSale;\n      var haveVideo = video ? true : false;\n      return __jsx(Form, _extends({}, layout, {\n        onFinish: submit && submit.bind(this),\n        onFinishFailed: function onFinishFailed() {\n          return message.error('Please complete the required fields');\n        },\n        name: \"form-upload\",\n        ref: this.formRef,\n        validateMessages: validateMessages,\n        initialValues: video ? video : {\n          title: '',\n          token: 0,\n          description: '',\n          status: 'draft',\n          performerId: '',\n          isSaleVideo: video === null || video === void 0 ? void 0 : video.isSaleVideo\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }), __jsx(Form.Item, {\n        name: \"performerId\",\n        label: \"Performer\",\n        rules: [{\n          required: true\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, __jsx(SelectPerformerDropdown, {\n        disabled: haveVideo,\n        defaultValue: video && video.performerId,\n        onSelect: function onSelect(val) {\n          return _this4.setFormVal('performerId', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        name: \"title\",\n        rules: [{\n          required: true,\n          message: 'Please input title of video!'\n        }],\n        label: \"Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }, __jsx(Input, {\n        placeholder: \"Enter video title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        name: \"isSaleVideo\",\n        label: \"Is Sale?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, __jsx(Switch, {\n        defaultChecked: video === null || video === void 0 ? void 0 : video.isSaleVideo,\n        onChange: function onChange(checked) {\n          _this4.setFormVal('isSaleVideo', checked);\n\n          _this4.setState({\n            isSale: checked\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        name: \"token\",\n        label: \"Token\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }, __jsx(InputNumber, {\n        disabled: !isSale,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        name: \"description\",\n        label: \"Description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }\n      }, __jsx(Input.TextArea, {\n        rows: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        name: \"status\",\n        label: \"Status\",\n        rules: [{\n          required: true,\n          message: 'Please select status!'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, __jsx(Select, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, __jsx(Select.Option, {\n        value: \"draft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, \"Draft\"), __jsx(Select.Option, {\n        key: \"active\",\n        value: \"active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, \"Active\"), __jsx(Select.Option, {\n        key: \"inactive\",\n        value: \"inactive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, \"Inactive\"))), __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        key: \"thumbnail\",\n        className: \"ant-row ant-form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"ant-col ant-col-4 ant-form-item-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }, \"Thumbnail\")), __jsx(\"div\", {\n        className: \"ant-col ant-col-16 ant-form-item-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, !haveVideo ? __jsx(Upload, {\n        accept: process.env.NEXT_PUBLIC_IMAGE_ACCPET || 'image/*',\n        multiple: false,\n        showUploadList: false,\n        disabled: uploading || haveVideo,\n        beforeUpload: function beforeUpload(file) {\n          return _this4.beforeUpload(file, 'thumbnail');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }, previewThumbnail ? __jsx(\"img\", {\n        src: previewThumbnail,\n        alt: \"file\",\n        style: {\n          width: '250px',\n          marginBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }) : null, __jsx(\"div\", {\n        style: {\n          clear: 'both'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }\n      }), !haveVideo && __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }, __jsx(UploadOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 23\n        }\n      }), \" Select File\")) : __jsx(ThumbnailVideo, {\n        video: video,\n        style: {\n          width: '250px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"ant-form-item-explain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, \"Image must smaller than \", process.env.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_IMAGE || 2, \"MB! Only accept \", process.env.NEXT_PUBLIC_IMAGE_ACCPET, \".\")))), __jsx(\"div\", {\n        key: \"video\",\n        className: \"ant-row ant-form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"ant-col ant-col-4 ant-form-item-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }\n      }, \"Video\")), __jsx(\"div\", {\n        className: \"ant-col ant-col-16 ant-form-item-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, __jsx(Upload, {\n        accept: process.env.NEXT_PUBLIC_VIDEO_ACCEPT || 'video/*,.mkv',\n        multiple: false,\n        showUploadList: false,\n        disabled: uploading || haveVideo,\n        beforeUpload: function beforeUpload(file) {\n          return _this4.beforeUpload(file, 'video');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }\n      }, previewVideo ? __jsx(\"video\", {\n        controls: true,\n        id: \"video\",\n        style: {\n          width: '250px',\n          marginBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 19\n        }\n      }) : null, __jsx(\"div\", {\n        style: {\n          clear: 'both'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }), !haveVideo && __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 19\n        }\n      }, __jsx(UploadOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }), \" Select File\")), uploadPercentage ? __jsx(Progress, {\n        percent: uploadPercentage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }) : null, __jsx(\"div\", {\n        className: \"ant-form-item-explain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      }, \"Video must smaller than \", process.env.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_VIDEO || 20, \"MB! Only accept \", process.env.NEXT_PUBLIC_VIDEO_ACCEPT || 'video/*,.mkv', \".\"))))), __jsx(Form.Item, {\n        wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n          offset: 4\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: uploading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }, haveVideo ? 'Update' : 'Upload')));\n    }\n  }]);\n\n  return FormUploadVideo;\n}(PureComponent);","map":null,"metadata":{},"sourceType":"module"}
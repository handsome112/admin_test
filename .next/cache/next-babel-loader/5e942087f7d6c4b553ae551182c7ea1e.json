{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/src/components/file/file-upload.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { PureComponent } from 'react';\n\nfunction beforeUpload(file) {\n  const isLt2M = file.size / 1024 / 1024 < (process.env.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_FILE || 20);\n\n  if (!isLt2M) {\n    message.error(`File must smaller than ${process.env.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_FILE || 20}MB!`);\n  }\n\n  return isLt2M;\n}\n\nexport class FileUpload extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false,\n      fileUrl: this.props.fileUrl\n    });\n\n    _defineProperty(this, \"handleChange\", info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        this.setState({\n          loading: false,\n          fileUrl: info.file.response.data ? info.file.response.data.url : 'Done!'\n        });\n        this.props.onUploaded && this.props.onUploaded({\n          response: info.file.response\n        });\n      }\n    });\n  }\n\n  render() {\n    const uploadButton = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, this.state.loading ? __jsx(LoadingOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 31\n      }\n    }) : __jsx(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 53\n      }\n    }), __jsx(\"div\", {\n      className: \"ant-upload-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Upload\"));\n\n    const {\n      fileUrl\n    } = this.state;\n    const {\n      headers,\n      uploadUrl,\n      fieldName = 'file'\n    } = this.props;\n    return __jsx(Upload, _extends({\n      name: fieldName,\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: uploadUrl,\n      beforeUpload: beforeUpload,\n      onChange: this.handleChange\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }), fileUrl ? __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }\n    }, \"Click to download\") : uploadButton);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
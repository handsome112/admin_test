{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/src/components/performer/Document.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport { Form, Button } from 'antd';\nimport { performerService, authService } from '@services/index';\nimport { FileUpload } from '@components/file/file-upload';\nvar layout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nexport var PerformerDocument = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PerformerDocument, _PureComponent);\n\n  var _super = _createSuper(PerformerDocument);\n\n  function PerformerDocument() {\n    var _this;\n\n    _classCallCheck(this, PerformerDocument);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      idVerificationUrl: _this.props.performer && _this.props.performer.idVerification ? _this.props.performer.idVerification.url : '',\n      documentVerificationUrl: _this.props.performer && _this.props.performer.documentVerification ? _this.props.performer.documentVerification.url : '',\n      releaseFormUrl: _this.props.performer && _this.props.performer.releaseForm ? _this.props.performer.releaseForm.url : ''\n    });\n\n    return _this;\n  }\n\n  _createClass(PerformerDocument, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          _onUploaded = _this$props.onUploaded,\n          onFormRefSubmit = _this$props.onFormRefSubmit,\n          submiting = _this$props.submiting,\n          update = _this$props.update;\n      var _this$state = this.state,\n          idVerificationUrl = _this$state.idVerificationUrl,\n          documentVerificationUrl = _this$state.documentVerificationUrl,\n          releaseFormUrl = _this$state.releaseFormUrl;\n      var uploadHeaders = {\n        authorization: authService.getToken()\n      };\n      return __jsx(Form, _extends({}, layout, {\n        name: \"form-performer\",\n        onFinish: function onFinish() {\n          return onFormRefSubmit();\n        },\n        initialValues: {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }), __jsx(\"div\", {\n        key: \"verificationId\",\n        className: \"ant-row ant-form-item ant-form-item-with-help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: update === true ? \"ant-col ant-col-lg-10 ant-col-md-10  ant-col-sm-12 ant-form-item-label\" : \"ant-col ant-col-lg-8 ant-col-md-10  ant-col-sm-12 ant-form-item-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"ID For Verification\")), __jsx(\"div\", {\n        className: \"ant-col ant-col-16 ant-form-item-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, __jsx(FileUpload, {\n        uploadUrl: performerService.getUploadDocumentUrl(),\n        headers: uploadHeaders,\n        onUploaded: function onUploaded(resp) {\n          _this2.setState({\n            idVerificationUrl: resp.response.data.url\n          });\n\n          _onUploaded('idVerificationId', resp);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }), idVerificationUrl && __jsx(\"a\", {\n        target: \"_blank\",\n        href: idVerificationUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }, \"ID For Verification Link \"))), __jsx(\"div\", {\n        key: \"documentVerificationId\",\n        className: \"ant-row ant-form-item ant-form-item-with-help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: update === true ? \"ant-col ant-col-lg-10 ant-col-md-10  ant-col-sm-12 ant-form-item-label\" : \"ant-col ant-col-lg-8 ant-col-md-10  ant-col-sm-12 ant-form-item-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, \"Document For Verification\")), __jsx(\"div\", {\n        className: \"ant-col ant-col-16 ant-form-item-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, __jsx(FileUpload, {\n        uploadUrl: performerService.getUploadDocumentUrl(),\n        headers: uploadHeaders,\n        onUploaded: function onUploaded(resp) {\n          _this2.setState({\n            documentVerificationUrl: resp.response.data.url\n          });\n\n          _onUploaded('documentVerificationId', resp);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }), documentVerificationUrl && __jsx(\"a\", {\n        target: \"_blank\",\n        href: documentVerificationUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, \"Document For Verification\"))), __jsx(\"div\", {\n        key: \"releaseForm\",\n        className: \"ant-row ant-form-item ant-form-item-with-help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: update === true ? \"ant-col ant-col-lg-10 ant-col-md-10  ant-col-sm-12 ant-form-item-label\" : \"ant-col ant-col-lg-8 ant-col-md-10  ant-col-sm-12 ant-form-item-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, \"Release Form\")), __jsx(\"div\", {\n        className: \"ant-col ant-col-16 ant-form-item-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, __jsx(FileUpload, {\n        uploadUrl: performerService.getUploadDocumentUrl(),\n        headers: uploadHeaders,\n        onUploaded: function onUploaded(resp) {\n          _this2.setState({\n            releaseFormUrl: resp.response.data.url\n          });\n\n          _onUploaded('releaseFormId', resp);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }), releaseFormUrl && __jsx(\"a\", {\n        target: \"_blank\",\n        href: releaseFormUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 32\n        }\n      }, \"Release Form\"))), __jsx(Form.Item, {\n        wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n          offset: 4\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: submiting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, \"Submit\")));\n    }\n  }]);\n\n  return PerformerDocument;\n}(PureComponent);","map":null,"metadata":{},"sourceType":"module"}
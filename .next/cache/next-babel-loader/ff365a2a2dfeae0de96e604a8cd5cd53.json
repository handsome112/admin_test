{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/pages/auth/login.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Input, Button, Alert } from 'antd';\nimport { Fragment, PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { CopyrightCircleOutlined } from '@ant-design/icons';\nimport './index.less';\nimport Head from 'next/head';\nimport { login } from '@redux/auth/actions';\nimport Link from 'next/link';\nimport { getResponseError } from '@lib/utils';\nconst FormItem = Form.Item;\nexport async function getStaticProps() {\n  return {\n    props: {}\n  };\n}\n\nclass Login extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleOk\", data => {\n      this.props.login(data);\n    });\n  }\n\n  render() {\n    const {\n      siteName,\n      logo\n    } = this.props.ui;\n    const {\n      loginAuth = {\n        requesting: false,\n        error: null,\n        success: false\n      }\n    } = this.props;\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Login\")), __jsx(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, logo && __jsx(\"img\", {\n      alt: \"logo\",\n      src: logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, siteName)), loginAuth.error && __jsx(Alert, {\n      message: \"Error\",\n      description: getResponseError(loginAuth.error),\n      type: \"error\",\n      showIcon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), loginAuth.success ? __jsx(Alert, {\n      message: \"Login success\",\n      type: \"success\",\n      description: \"Redirecting...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }) : __jsx(Form, {\n      onFinish: this.handleOk,\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, __jsx(FormItem, {\n      hasFeedback: true // label=\"Username\"\n      ,\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: 'Please input your email!'\n      }, {\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      placeholder: \"youremail@example.com\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    })), __jsx(FormItem, {\n      hasFeedback: true // label=\"Password\"\n      ,\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    })), __jsx(FormItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      disabled: loginAuth.requesting,\n      loading: loginAuth.requesting,\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Sign in\"))), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: \"/auth/forgot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Forgot?\")))), __jsx(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, siteName, \" \", __jsx(CopyrightCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 22\n      }\n    }), ` Copy right ${new Date().getFullYear()}`));\n  }\n\n}\n\n_defineProperty(Login, \"layout\", 'public');\n\n_defineProperty(Login, \"authenticate\", false);\n\nconst mapStates = state => ({\n  loginAuth: state.auth.login,\n  ui: state.ui\n});\n\nconst mapDispatch = {\n  login\n};\nexport default connect(mapStates, mapDispatch)(Login);","map":null,"metadata":{},"sourceType":"module"}
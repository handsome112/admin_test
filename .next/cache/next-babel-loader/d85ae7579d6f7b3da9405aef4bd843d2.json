{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/pages/users/update.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment } from 'react';\nimport { Tabs, message } from 'antd';\nimport Page from '@components/common/layout/page';\nimport { AccountForm } from '@components/user/account-form';\nimport { authService, userService } from '@services/index';\nimport { UpdatePaswordForm } from '@components/user/update-password-form';\nimport Loader from '@components/common/base/loader';\nimport { utilsService } from '@services/utils.service';\nimport { UpdateBalanceForm } from '@components/user/UpdateBalanceForm';\n\nclass UserUpdate extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      pwUpdating: false,\n      updating: false,\n      fetching: false,\n      user: {}\n    });\n  }\n\n  static async getInitialProps({\n    ctx\n  }) {\n    const resp = await utilsService.countriesList();\n    return _objectSpread({\n      countries: resp.data\n    }, ctx.query);\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        fetching: true\n      });\n      const resp = await userService.findById(this.props.id);\n      this.setState({\n        user: resp.data\n      });\n    } catch (e) {\n      message.error('Error while fecting user!');\n    } finally {\n      this.setState({\n        fetching: false\n      });\n    }\n  }\n\n  async submit(data) {\n    try {\n      this.setState({\n        updating: true\n      });\n      const updated = await userService.update(this.props.id, data);\n      this.setState({\n        user: updated.data\n      });\n      message.success('Updated successfully');\n    } catch (e) {\n      // TODO - exact error message\n      message.error('An error occurred, please try again!');\n    } finally {\n      this.setState({\n        updating: false\n      });\n    }\n  }\n\n  onAvatarUploaded(data) {\n    // TODO - check with current user if needed?\n    message.success('Avatar has been updated!'); // this.props.updateCurrentUserAvatar(data.base64);\n  }\n\n  async updatePassword(data) {\n    try {\n      this.setState({\n        pwUpdating: true\n      });\n      await authService.updatePassword(data.password, this.props.id);\n      message.success('Password has been updated!');\n    } catch (e) {\n      message.error('An error occurred, please try again!');\n    } finally {\n      this.setState({\n        pwUpdating: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      pwUpdating,\n      user,\n      updating,\n      fetching\n    } = this.state;\n    const {\n      countries\n    } = this.props;\n    const uploadHeaders = {\n      authorization: authService.getToken()\n    };\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"User update\")), __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, fetching ? __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }) : __jsx(Tabs, {\n      defaultActiveKey: \"basic\",\n      tabPosition: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, __jsx(Tabs.TabPane, {\n      tab: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 34\n        }\n      }, \"Basic info\"),\n      key: \"basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, __jsx(AccountForm, {\n      onFinish: this.submit.bind(this),\n      user: user,\n      updating: updating,\n      options: {\n        uploadHeaders,\n        avatarUploadUrl: userService.getAvatarUploadUrl(user._id),\n        onAvatarUploaded: this.onAvatarUploaded.bind(this)\n      },\n      countries: countries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    })), __jsx(Tabs.TabPane, {\n      tab: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 34\n        }\n      }, \"Change password\"),\n      key: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, __jsx(UpdatePaswordForm, {\n      onFinish: this.updatePassword.bind(this),\n      updating: pwUpdating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    })), __jsx(Tabs.TabPane, {\n      tab: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 34\n        }\n      }, \"Balance\"),\n      key: \"balance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, __jsx(UpdateBalanceForm, {\n      balance: user.balance,\n      onFinish: this.submit.bind(this),\n      updating: updating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default UserUpdate;","map":null,"metadata":{},"sourceType":"module"}
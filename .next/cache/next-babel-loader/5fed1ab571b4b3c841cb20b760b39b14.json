{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/pages/settings/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment, createRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { Form, Menu, message, Button, Input, InputNumber, Switch, Radio, Checkbox, Select } from 'antd';\nimport Page from '@components/common/layout/page';\nimport Loader from '@components/common/base/loader';\nimport { ImageUpload } from '@components/file/image-upload';\nimport SoundUpload from '@components/file/sound-upload';\nimport { authService } from '@services/auth.service';\nimport { settingService } from '@services/setting.service';\nimport { getResponseError } from '@lib/utils';\nimport { SelectPostDropdown } from '@components/post/select-post-dropdown';\nvar WYSIWYG = dynamic(function () {\n  return import('@components/wysiwyg');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('@components/wysiwyg')];\n    },\n    modules: ['@components/wysiwyg']\n  }\n});\nvar Option = Select.Option;\n\nvar Settings = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Settings, _PureComponent);\n\n  var _super = _createSuper(Settings);\n\n  function Settings() {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"footerContent\", '');\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      updating: false,\n      loading: false,\n      selectedTab: 'general',\n      list: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"dataChange\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"smtpInfo\", {\n      host: '',\n      port: 465,\n      secure: true,\n      auth: {\n        user: '',\n        password: ''\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.formRef = createRef();\n      this.loadSettings();\n    }\n  }, {\n    key: \"onMenuChange\",\n    value: function () {\n      var _onMenuChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(menu) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.setState({\n                  selectedTab: menu.key\n                });\n\n              case 2:\n                _context.next = 4;\n                return this.loadSettings();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onMenuChange(_x) {\n        return _onMenuChange.apply(this, arguments);\n      }\n\n      return onMenuChange;\n    }()\n  }, {\n    key: \"loadSettings\",\n    value: function () {\n      var _loadSettings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var selectedTab, resp, info, error;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                selectedTab = this.state.selectedTab;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return this.setState({\n                  loading: true\n                });\n\n              case 4:\n                _context2.next = 6;\n                return settingService.all(this.state.selectedTab);\n\n              case 6:\n                resp = _context2.sent;\n                this.dataChange = {};\n\n                if (selectedTab === 'mailer' && resp.data && resp.data.length) {\n                  info = resp.data.find(function (data) {\n                    return data.key === 'smtpTransporter';\n                  });\n                  if (info) this.smtpInfo = info.value;\n                }\n\n                this.setState({\n                  list: resp.data\n                });\n                _context2.next = 18;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](1);\n                _context2.next = 16;\n                return Promise.resolve(_context2.t0);\n\n              case 16:\n                error = _context2.sent;\n                message.error(getResponseError(error));\n\n              case 18:\n                _context2.prev = 18;\n                _context2.next = 21;\n                return this.setState({\n                  loading: false\n                });\n\n              case 21:\n                return _context2.finish(18);\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 12, 18, 22]]);\n      }));\n\n      function loadSettings() {\n        return _loadSettings.apply(this, arguments);\n      }\n\n      return loadSettings;\n    }()\n  }, {\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _i, _Object$keys, key, error;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.setState({\n                  updating: true\n                });\n\n              case 3:\n                _i = 0, _Object$keys = Object.keys(this.dataChange);\n\n              case 4:\n                if (!(_i < _Object$keys.length)) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                key = _Object$keys[_i];\n                _context3.next = 8;\n                return settingService.update(key, this.dataChange[key]);\n\n              case 8:\n                _i++;\n                _context3.next = 4;\n                break;\n\n              case 11:\n                message.success('Updated setting successfully');\n                _context3.next = 20;\n                break;\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](0);\n                _context3.next = 18;\n                return Promise.resolve(_context3.t0);\n\n              case 18:\n                error = _context3.sent;\n                message.error(getResponseError(error));\n\n              case 20:\n                _context3.prev = 20;\n                _context3.next = 23;\n                return this.setState({\n                  updating: false\n                });\n\n              case 23:\n                return _context3.finish(20);\n\n              case 24:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 14, 20, 24]]);\n      }));\n\n      function submit() {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  }, {\n    key: \"renderUpload\",\n    value: function renderUpload(setting, ref) {\n      var _this2 = this;\n\n      if (!setting.meta || !setting.meta.upload) {\n        return null;\n      }\n\n      var uploadHeaders = {\n        authorization: authService.getToken()\n      };\n      return __jsx(\"div\", {\n        style: {\n          padding: '10px 0'\n        },\n        key: \"upload\".concat(setting._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, setting.meta.image ? __jsx(ImageUpload, {\n        imageUrl: setting.value,\n        uploadUrl: settingService.getFileUploadUrl(),\n        headers: uploadHeaders,\n        onUploaded: function onUploaded(resp) {\n          var formInstance = _this2.formRef.current;\n          ref.current.input.value = resp.response.data.url;\n          formInstance.setFieldsValue(_defineProperty({}, setting.key, resp.response.data.url));\n          _this2.dataChange[setting.key] = resp.response.data.url;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }) : __jsx(SoundUpload, {\n        fileUrl: setting.value,\n        uploadUrl: settingService.getFileUploadUrl(),\n        headers: uploadHeaders,\n        onUploaded: function onUploaded(resp) {\n          var formInstance = _this2.formRef.current;\n          ref.current.input.value = resp.response.data.url;\n          formInstance.setFieldsValue(_defineProperty({}, setting.key, resp.response.data.url));\n          _this2.dataChange[setting.key] = resp.response.data.url;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }));\n    }\n  }, {\n    key: \"setVal\",\n    value: function setVal(field, val) {\n      this.dataChange[field] = val;\n    }\n  }, {\n    key: \"setObject\",\n    value: function setObject(field, val) {\n      if (field === 'user' || field === 'pass') {\n        this.smtpInfo.auth[field] = val;\n      } else {\n        this.smtpInfo[field] = val;\n      }\n\n      this.dataChange.smtpTransporter = this.smtpInfo;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"renderFormItem\",\n    value: function renderFormItem(setting) {\n      var _this3 = this,\n          _setting$value,\n          _setting$value2,\n          _setting$value3,\n          _setting$value4,\n          _setting$value4$auth,\n          _setting$value5,\n          _setting$value5$auth,\n          _setting$meta,\n          _setting$meta2;\n\n      var updating = this.state.updating;\n      var type = setting.type;\n\n      if (setting.meta && setting.meta.textarea) {\n        type = 'textarea';\n      }\n\n      var ref = createRef();\n\n      switch (type) {\n        case 'textarea':\n          return __jsx(Form.Item, {\n            label: setting.name,\n            key: setting._id,\n            extra: setting.description,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 11\n            }\n          }, __jsx(Input.TextArea, {\n            defaultValue: setting.value,\n            onChange: function onChange(val) {\n              return _this3.setVal(setting.key, val.target.value);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 13\n            }\n          }));\n\n        case 'text-editor':\n          return __jsx(Form.Item, {\n            label: setting.name,\n            key: setting._id,\n            help: setting.description,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 11\n            }\n          }, __jsx(WYSIWYG, {\n            onChange: function onChange(_ref) {\n              var html = _ref.html;\n              return _this3.setVal(setting.key, html);\n            },\n            html: setting.value,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 13\n            }\n          }));\n\n        case 'checkbox':\n          return __jsx(Form.Item, {\n            label: setting.name,\n            key: setting._id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 11\n            }\n          }, __jsx(Checkbox.Group, {\n            options: setting.meta.options,\n            onChange: function onChange(checkedValues) {\n              return _this3.setVal(setting.key, checkedValues);\n            },\n            defaultValue: setting.value,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }\n          }));\n\n        case 'number':\n          return __jsx(Form.Item, {\n            label: setting.name,\n            key: setting._id,\n            extra: setting.description,\n            name: setting.key,\n            rules: [{\n              validator: function validator(_, value) {\n                if (typeof value !== 'number') {\n                  return Promise.reject('This field must be a number!');\n                }\n\n                if (setting.meta && typeof setting.meta.min !== 'undefined' && value < setting.meta.min) {\n                  return Promise.reject('Minimum ' + setting.meta.min);\n                }\n\n                if (setting.meta && typeof setting.meta.min !== 'undefined' && value > setting.meta.max) {\n                  return Promise.reject('Maximum ' + setting.meta.max);\n                }\n\n                return Promise.resolve();\n              }\n            }],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 11\n            }\n          }, __jsx(InputNumber, {\n            style: {\n              width: '100%'\n            },\n            step: setting.meta && typeof setting.meta.step !== 'undefined' ? setting.meta.step : 1,\n            defaultValue: setting.value,\n            onChange: function onChange(val) {\n              return _this3.setVal(setting.key, val);\n            },\n            min: setting.meta && typeof setting.meta.min !== 'undefined' ? setting.meta.min : Number.MIN_SAFE_INTEGER,\n            max: setting.meta && typeof setting.meta.max !== 'undefined' ? setting.meta.max : Number.MAX_SAFE_INTEGER,\n            type: \"number\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 13\n            }\n          }));\n\n        case 'boolean':\n          return __jsx(\"div\", {\n            className: \"ant-row ant-form-item ant-form-item-with-help\",\n            key: setting._id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 11\n            }\n          }, __jsx(\"div\", {\n            className: \"ant-col ant-col-4 ant-form-item-label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 13\n            }\n          }, __jsx(\"label\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }\n          }, setting.name)), __jsx(\"div\", {\n            className: \"ant-col ant-col-16 ant-form-item-control\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 13\n            }\n          }, __jsx(Switch, {\n            defaultChecked: setting.value,\n            onChange: function onChange(val) {\n              return _this3.setVal(setting.key, val);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }\n          }), __jsx(\"div\", {\n            className: \"ant-form-item-explain\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }\n          }, setting.description)));\n\n        case 'commission':\n          return __jsx(Form.Item, {\n            name: setting.key,\n            label: setting.name,\n            key: setting._id,\n            extra: setting.description,\n            rules: [{\n              validator: function validator(_, v) {\n                if (parseInt(v) > 100 && parseInt(v) < 0) {\n                  return Promise.reject('Please input number 0-100');\n                }\n\n                return Promise.resolve();\n              }\n            }],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 11\n            }\n          }, __jsx(InputNumber, {\n            min: 0,\n            max: 100,\n            defaultValue: setting.value,\n            onChange: function onChange(val) {\n              return _this3.setVal(setting.key, val);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 13\n            }\n          }));\n\n        case 'mixed':\n          return __jsx(\"div\", {\n            className: \"ant-row ant-form-item ant-form-item-with-help\",\n            key: setting._id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 11\n            }\n          }, __jsx(\"div\", {\n            className: \"ant-col ant-col-4 ant-form-item-label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 13\n            }\n          }, __jsx(\"label\", {\n            htmlFor: \"setting-name\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }\n          }, setting.name)), __jsx(\"div\", {\n            className: \"ant-col ant-col-20 ant-form-item-control\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 13\n            }\n          }, __jsx(\"div\", {\n            className: \"ant-form-item\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }\n          }, __jsx(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }\n          }, __jsx(\"label\", {\n            htmlFor: \"host-name\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }\n          }, \"Host\"), __jsx(Input, {\n            defaultValue: setting === null || setting === void 0 ? void 0 : (_setting$value = setting.value) === null || _setting$value === void 0 ? void 0 : _setting$value.host,\n            onChange: function onChange(val) {\n              return _this3.setObject('host', val.target.value);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }\n          })), __jsx(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }\n          }, __jsx(\"label\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }\n          }, \"Port\"), __jsx(Input, {\n            defaultValue: setting === null || setting === void 0 ? void 0 : (_setting$value2 = setting.value) === null || _setting$value2 === void 0 ? void 0 : _setting$value2.port,\n            onChange: function onChange(val) {\n              return _this3.setObject('port', val.target.value);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }\n          })), __jsx(\"div\", {\n            style: {\n              margin: '10px 0'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }\n          }, __jsx(\"label\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }\n          }, __jsx(Checkbox, {\n            defaultChecked: (setting === null || setting === void 0 ? void 0 : (_setting$value3 = setting.value) === null || _setting$value3 === void 0 ? void 0 : _setting$value3.secure) || false,\n            onChange: function onChange(e) {\n              return _this3.setObject('secure', e.target.checked);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 21\n            }\n          }), ' ', \"Secure (true for port 465, false for other ports)\")), __jsx(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }\n          }, __jsx(\"label\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }\n          }, \"Auth user\"), __jsx(Input, {\n            defaultValue: setting === null || setting === void 0 ? void 0 : (_setting$value4 = setting.value) === null || _setting$value4 === void 0 ? void 0 : (_setting$value4$auth = _setting$value4.auth) === null || _setting$value4$auth === void 0 ? void 0 : _setting$value4$auth.user,\n            onChange: function onChange(val) {\n              return _this3.setObject('user', val.target.value);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }\n          })), __jsx(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }\n          }, __jsx(\"label\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }\n          }, \"Auth password\"), __jsx(Input, {\n            defaultValue: setting === null || setting === void 0 ? void 0 : (_setting$value5 = setting.value) === null || _setting$value5 === void 0 ? void 0 : (_setting$value5$auth = _setting$value5.auth) === null || _setting$value5$auth === void 0 ? void 0 : _setting$value5$auth.pass,\n            onChange: function onChange(val) {\n              return _this3.setObject('pass', val.target.value);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }\n          }))), __jsx(\"div\", {\n            className: \"ant-form-item-explain\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }\n          }, setting.description), __jsx(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }\n          }, __jsx(Button, {\n            disabled: updating,\n            loading: updating,\n            onClick: this.verifyMailer.bind(this),\n            type: \"link\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }\n          }, \"Once saved, click here to send a testing email using this configuration above\"))));\n\n        case 'radio':\n          return __jsx(Form.Item, {\n            label: setting.name,\n            key: setting._id,\n            help: setting.description,\n            extra: setting.extra,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 11\n            }\n          }, __jsx(Radio.Group, {\n            onChange: function onChange(val) {\n              return _this3.setVal(setting.key, val.target.value);\n            },\n            defaultValue: setting.value,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 13\n            }\n          }, (_setting$meta = setting.meta) === null || _setting$meta === void 0 ? void 0 : _setting$meta.value.map(function (v) {\n            return __jsx(Radio, {\n              value: v.key,\n              checked: _this3.dataChange[setting.key] === v.key,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }\n            }, v.name);\n          })));\n\n        case 'post':\n          return __jsx(Form.Item, {\n            label: setting.name,\n            key: setting._id,\n            help: setting.description,\n            extra: setting.extra,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 13\n            }\n          }, __jsx(SelectPostDropdown, {\n            defaultValue: setting.value,\n            onSelect: function onSelect(val) {\n              return _this3.setVal(setting.key, val);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }\n          }));\n\n        case 'dropdown':\n        case 'radio':\n          return __jsx(Form.Item, {\n            label: setting.name,\n            key: setting._id,\n            help: setting.description,\n            extra: setting.extra,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 11\n            }\n          }, __jsx(Select, {\n            onChange: function onChange(val) {\n              return _this3.setVal(setting.key, val);\n            },\n            defaultValue: setting.value,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 13\n            }\n          }, (_setting$meta2 = setting.meta) === null || _setting$meta2 === void 0 ? void 0 : _setting$meta2.value.map(function (v) {\n            return __jsx(Option, {\n              value: v.key,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 17\n              }\n            }, v.name);\n          })));\n\n        default:\n          return __jsx(Form.Item, {\n            label: setting.name,\n            key: setting._id,\n            help: setting.description,\n            extra: setting.extra,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 11\n            }\n          }, __jsx(Input, {\n            defaultValue: setting.value,\n            ref: ref,\n            key: \"input\".concat(setting._id),\n            onChange: function onChange(val) {\n              return _this3.setVal(setting.key, val.target.value);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 13\n            }\n          }), this.renderUpload(setting, ref));\n      }\n    }\n  }, {\n    key: \"verifyMailer\",\n    value: function () {\n      var _verifyMailer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var err;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                this.setState({\n                  updating: true\n                });\n                _context4.next = 4;\n                return settingService.verifyMailer();\n\n              case 4:\n                message.success('We\\'ve sent and test email, please check your email inbox or spam folder');\n                _context4.next = 13;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                _context4.next = 11;\n                return Promise.resolve(_context4.t0);\n\n              case 11:\n                err = _context4.sent;\n                message.error(err && err.errno ? err.errno : 'Could not verify this SMTP transporter');\n\n              case 13:\n                _context4.prev = 13;\n                this.setState({\n                  updating: false\n                });\n                return _context4.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 7, 13, 16]]);\n      }));\n\n      function verifyMailer() {\n        return _verifyMailer.apply(this, arguments);\n      }\n\n      return verifyMailer;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          updating = _this$state.updating,\n          selectedTab = _this$state.selectedTab,\n          list = _this$state.list,\n          loading = _this$state.loading;\n      var fixedTabs = ['commission', 'ccbill', 'custom'];\n      var layout = fixedTabs.includes(selectedTab) ? {\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        }\n      } : {\n        labelCol: {\n          span: 4\n        },\n        wrapperCol: {\n          span: 16\n        }\n      };\n      var initialValues = {};\n      list.forEach(function (item) {\n        initialValues[item.key] = item.value;\n      });\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }\n      }, \"Site Settings\")), __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }\n      }, __jsx(Menu, {\n        onClick: this.onMenuChange.bind(this),\n        selectedKeys: [selectedTab],\n        mode: \"horizontal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }\n      }, __jsx(Menu.Item, {\n        key: \"general\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 15\n        }\n      }, \"General\"), __jsx(Menu.Item, {\n        key: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 15\n        }\n      }, \"Email\"), __jsx(Menu.Item, {\n        key: \"custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 15\n        }\n      }, \"Custom\"), __jsx(Menu.Item, {\n        key: \"commission\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 15\n        }\n      }, \"Commission\"), __jsx(Menu.Item, {\n        key: \"ccbill\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 15\n        }\n      }, \"CCbill\"), __jsx(Menu.Item, {\n        key: \"mailer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 15\n        }\n      }, \"SMTP\"), __jsx(Menu.Item, {\n        key: \"analytics\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 15\n        }\n      }, \"Google Analytics\"), __jsx(Menu.Item, {\n        key: \"default-price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 15\n        }\n      }, \"Default Price\"), __jsx(Menu.Item, {\n        key: \"customText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }\n      }, \"Custom Text\"), __jsx(Menu.Item, {\n        key: \"ant\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 15\n        }\n      }, \"Ant Media\"), __jsx(Menu.Item, {\n        key: \"currency\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 15\n        }\n      }, \"Currency\"))), loading ? __jsx(Loader, {\n        spinning: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }\n      }) : __jsx(Form, _extends({}, layout, {\n        layout: fixedTabs.includes(selectedTab) ? 'vertical' : 'horizontal',\n        name: \"setting-frm\",\n        onFinish: this.submit.bind(this),\n        initialValues: initialValues,\n        ref: this.formRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }\n      }), list.map(function (setting) {\n        return _this4.renderFormItem(setting);\n      }), __jsx(Form.Item, {\n        wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n          offset: 4\n        }),\n        style: {\n          textAlign: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 17\n        }\n      }, __jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: updating,\n        disabled: updating,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 19\n        }\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return Settings;\n}(PureComponent);\n\nexport default Settings;","map":null,"metadata":{},"sourceType":"module"}
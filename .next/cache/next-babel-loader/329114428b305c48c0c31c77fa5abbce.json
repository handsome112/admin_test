{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/src/components/studio/studio-commission-form.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport { Form, Button, message, InputNumber } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst validateMessages = {\n  required: 'This field is required!'\n};\nexport default class StudioCommissionForm extends PureComponent {\n  render() {\n    const {\n      commission,\n      onFinish,\n      submiting\n    } = this.props;\n    return __jsx(Form, {\n      layout: 'vertical',\n      name: \"form-performer-commission\",\n      onFinish: onFinish.bind(this),\n      onFinishFailed: () => message.error('Please complete the required fields.'),\n      validateMessages: validateMessages,\n      initialValues: commission ? {\n        commission: commission\n      } : {\n        commission: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(Form.Item, {\n      name: \"commission\",\n      label: \"Commission\",\n      rules: [{\n        validator: (_, value) => {\n          if (parseInt(value) > 0 && parseInt(value) < 100) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('Value must be greater than 0 and less than 100');\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, __jsx(InputNumber, {\n      min: 1,\n      max: 99,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      wrapperCol: _objectSpread({}, layout.wrapperCol),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: submiting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
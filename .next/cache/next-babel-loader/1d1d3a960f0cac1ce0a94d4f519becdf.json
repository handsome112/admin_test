{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/src/components/file/file-upload.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { PureComponent } from 'react';\n\nfunction beforeUpload(file) {\n  var isLt2M = file.size / 1024 / 1024 < (process.env.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_FILE || 20);\n\n  if (!isLt2M) {\n    message.error(\"File must smaller than \".concat(process.env.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_FILE || 20, \"MB!\"));\n  }\n\n  return isLt2M;\n}\n\nexport var FileUpload = /*#__PURE__*/function (_PureComponent) {\n  _inherits(FileUpload, _PureComponent);\n\n  var _super = _createSuper(FileUpload);\n\n  function FileUpload() {\n    var _this;\n\n    _classCallCheck(this, FileUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false,\n      fileUrl: _this.props.fileUrl\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (info) {\n      if (info.file.status === 'uploading') {\n        _this.setState({\n          loading: true\n        });\n\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        _this.setState({\n          loading: false,\n          fileUrl: info.file.response.data ? info.file.response.data.url : 'Done!'\n        });\n\n        _this.props.onUploaded && _this.props.onUploaded({\n          response: info.file.response\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(FileUpload, [{\n    key: \"render\",\n    value: function render() {\n      var uploadButton = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, this.state.loading ? __jsx(LoadingOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 31\n        }\n      }) : __jsx(PlusOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 53\n        }\n      }), __jsx(\"div\", {\n        className: \"ant-upload-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, \"Upload\"));\n\n      var fileUrl = this.state.fileUrl;\n      var _this$props = this.props,\n          headers = _this$props.headers,\n          uploadUrl = _this$props.uploadUrl,\n          _this$props$fieldName = _this$props.fieldName,\n          fieldName = _this$props$fieldName === void 0 ? 'file' : _this$props$fieldName;\n      return __jsx(Upload, _extends({\n        name: fieldName,\n        listType: \"picture-card\",\n        className: \"avatar-uploader\",\n        showUploadList: false,\n        action: uploadUrl,\n        beforeUpload: beforeUpload,\n        onChange: this.handleChange\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }), fileUrl ? __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }\n      }, \"Click to download\") : uploadButton);\n    }\n  }]);\n\n  return FileUpload;\n}(PureComponent);","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/src/components/file/upload-list.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from \"react\";\nimport { PictureOutlined, DeleteOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { Progress } from \"antd\";\n\nvar UploadList = /*#__PURE__*/function (_PureComponent) {\n  _inherits(UploadList, _PureComponent);\n\n  var _super = _createSuper(UploadList);\n\n  function UploadList() {\n    var _this;\n\n    _classCallCheck(this, UploadList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      previews: {}\n    });\n\n    return _this;\n  }\n\n  _createClass(UploadList, [{\n    key: \"renderPreview\",\n    value: function renderPreview(file) {\n      var _this2 = this;\n\n      if (file.status === 'uploading') {\n        return __jsx(LoadingOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (this.state.previews[file.uid]) {\n        return __jsx(\"img\", {\n          src: this.state.previews[file.uid],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 14\n          }\n        });\n      }\n\n      var reader = new FileReader();\n      reader.addEventListener('load', function () {\n        var previews = _objectSpread(_objectSpread({}, _this2.state.previews), {}, _defineProperty({}, file.uid, reader.result));\n\n        _this2.setState({\n          previews: previews\n        });\n      });\n      reader.readAsDataURL(file);\n      return __jsx(PictureOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", {\n        className: \"ant-upload-list ant-upload-list-picture\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, this.props.files.map(function (file) {\n        return __jsx(\"div\", {\n          className: \"ant-upload-list-item ant-upload-list-item-uploading ant-upload-list-item-list-type-picture\",\n          key: file.uid,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }\n        }, __jsx(\"div\", {\n          className: \"ant-upload-list-item-info\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }\n        }, __jsx(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }\n        }, __jsx(\"span\", {\n          className: \"ant-upload-list-item-thumbnail ant-upload-list-item-file\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        }, _this3.renderPreview(file)), __jsx(\"span\", {\n          className: \"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }\n        }, file.name)), file.percent !== 100 && __jsx(\"span\", {\n          className: \"ant-upload-list-item-card-actions picture\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }\n        }, __jsx(\"a\", {\n          onClick: _this3.props.remove.bind(_this3, file),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }\n        }, __jsx(DeleteOutlined, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 23\n          }\n        }))), file.percent && __jsx(Progress, {\n          percent: file.percent,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 34\n          }\n        }))));\n      }));\n    }\n  }]);\n\n  return UploadList;\n}(PureComponent);\n\nexport { UploadList as default };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/pages/refund-request/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { message } from 'antd';\nimport Head from 'next/head';\nimport { PureComponent } from 'react';\nimport { SearchFilter } from '@components/common/search-filter';\nimport { BreadcrumbComponent } from '@components/common';\nimport Page from '@components/common/layout/page';\nimport RefundRequestTable from '@components/refund-request/table-list';\nimport { refundRequestService } from 'src/services';\nimport { getResponseError } from 'src/lib/utils';\n\nclass RefundRequestPage extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      data: [],\n      offset: 0,\n      pagination: {\n        total: 0,\n        pageSize: 10\n      },\n      sort: {\n        sortBy: 'createAt',\n        sorter: 'desc'\n      },\n      filter: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n\n  async onHandleTabChange(pagination, filters, sorter) {\n    const {\n      sort\n    } = this.state;\n    await this.setState({\n      offset: (pagination.current - 1) * this.state.pagination.pageSize,\n      sort: _objectSpread(_objectSpread({}, sort), {}, {\n        sortBy: sorter.field,\n        sorter: sorter.order === 'ascend' ? 'asc' : 'desc'\n      })\n    });\n    this.getList();\n  }\n\n  async updateStatus(id, value) {\n    await refundRequestService.update(id, {\n      status: value\n    });\n    this.getList();\n  }\n\n  async getList() {\n    const {\n      filter,\n      offset,\n      data,\n      pagination,\n      sort\n    } = this.state;\n\n    try {\n      const resp = await refundRequestService.search(_objectSpread(_objectSpread(_objectSpread({}, filter), sort), {}, {\n        offset,\n        limit: pagination.pageSize\n      }));\n      await this.setState({\n        data: resp.data.data,\n        pagination: _objectSpread(_objectSpread({}, pagination), {}, {\n          total: resp.data.total\n        })\n      });\n    } catch (e) {\n      this.showError(e);\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  async showError(e) {\n    const err = await Promise.resolve(e);\n    message.error(getResponseError(err));\n  }\n\n  async handleFilter(filter) {\n    await this.setState({\n      filter: filter\n    });\n    this.getList();\n  }\n\n  render() {\n    const {\n      data,\n      loading,\n      pagination\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Refund request\")), __jsx(BreadcrumbComponent, {\n      breadcrumbs: [{\n        title: 'Products'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, __jsx(SearchFilter, {\n      notWithKeyWord: true,\n      onSubmit: this.handleFilter.bind(this),\n      searchWithPerformer: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }), data ? __jsx(RefundRequestTable, {\n      data: data,\n      loading: loading,\n      rowKey: \"_id\",\n      pagination: pagination,\n      onChange: this.onHandleTabChange.bind(this),\n      updateStatus: this.updateStatus.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }) : __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"No request found.\")));\n  }\n\n}\n\nexport default RefundRequestPage;","map":null,"metadata":{},"sourceType":"module"}
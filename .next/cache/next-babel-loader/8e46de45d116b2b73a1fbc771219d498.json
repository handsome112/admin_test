{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/src/components/menu/form-menu.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent, createRef, Fragment } from 'react';\nimport { Form, Input, Button, Select, Switch, InputNumber, Popover } from 'antd';\nimport { SelectMenuTreeDropdown } from './common/menu-tree.select';\nimport { SelectPostDropdown } from '@components/post/select-post-dropdown';\nimport { isUrl } from '@lib/string';\nimport Link from 'next/link';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nexport var FormMenu = /*#__PURE__*/function (_PureComponent) {\n  _inherits(FormMenu, _PureComponent);\n\n  var _super = _createSuper(FormMenu);\n\n  function FormMenu() {\n    var _this;\n\n    _classCallCheck(this, FormMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isInternal: false,\n      path: ''\n    });\n\n    return _this;\n  }\n\n  _createClass(FormMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.formRef) this.formRef = createRef();\n      var menu = this.props.menu;\n\n      if (menu) {\n        this.setState({\n          isInternal: menu.internal,\n          path: menu.path\n        });\n      }\n    }\n  }, {\n    key: \"setFormVal\",\n    value: function setFormVal(field, val) {\n      var instance = this.formRef.current;\n      instance.setFieldsValue(_defineProperty({}, field, val));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(data) {\n      var path = data.path,\n          internal = data.internal;\n      var onFinish = this.props.onFinish;\n\n      if (internal && !isUrl(path)) {\n        data.path = path;\n      }\n\n      onFinish(data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.formRef) this.formRef = createRef();\n      var _this$props = this.props,\n          menu = _this$props.menu,\n          submitting = _this$props.submitting;\n      var isInternal = this.state.isInternal;\n      return __jsx(Form, {\n        ref: this.formRef,\n        onFinish: this.handleSubmit.bind(this),\n        initialValues: menu ? menu : {\n          title: '',\n          path: '',\n          help: '',\n          \"public\": false,\n          internal: false,\n          parentId: null,\n          section: 'footer',\n          ordering: 1,\n          isOpenNewTab: false\n        },\n        labelCol: {\n          span: 4\n        },\n        wrapperCol: {\n          span: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, __jsx(Form.Item, {\n        name: \"internal\",\n        label: __jsx(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }\n        }, __jsx(Popover, {\n          content: __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }\n          }, \"Using system website Static Page as menu item or external link\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }\n        }, __jsx(\"a\", {\n          style: {\n            marginRight: '5px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }\n        }, __jsx(QuestionCircleOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }\n        }))), \"From sytem page?\"),\n        valuePropName: \"checked\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, __jsx(Switch, {\n        defaultChecked: false,\n        onChange: function onChange(val) {\n          _this2.setState({\n            isInternal: val\n          });\n\n          _this2.setFormVal('path', '');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      })), !isInternal && __jsx(Form.Item, {\n        name: \"isOpenNewTab\",\n        label: \"Is open in new tab?\",\n        valuePropName: \"checked\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, __jsx(Switch, {\n        defaultChecked: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      })), isInternal ? __jsx(Form.Item, {\n        name: \"path\",\n        rules: [{\n          required: true,\n          message: 'Please select a page!'\n        }],\n        label: __jsx(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }\n        }, __jsx(Popover, {\n          content: __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }\n          }, \"If there is no data, please create a page at\", ' ', __jsx(Link, {\n            href: \"/posts/create\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 23\n            }\n          }, __jsx(\"a\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }\n          }, \"here\"))),\n          title: \"Pages listing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }\n        }, __jsx(\"a\", {\n          style: {\n            marginRight: '5px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }\n        }, __jsx(QuestionCircleOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }\n        }))), \"Page\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, __jsx(SelectPostDropdown, {\n        onSelect: function onSelect(_, data) {\n          var slug = data.slug;\n\n          _this2.setFormVal('path', '/page/' + slug);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      })) : __jsx(Form.Item, {\n        name: \"path\",\n        rules: [{\n          required: true,\n          message: 'Please input url of menu!'\n        }, {\n          validator: function validator(rule, value) {\n            if (!value) return Promise.resolve();\n            var isUrlValid = isUrl(value);\n\n            if (!isUrlValid) {\n              return Promise.reject('The url is not valid');\n            }\n\n            return Promise.resolve();\n          }\n        }],\n        label: \"Url\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, __jsx(Input, {\n        placeholder: \"Enter menu url\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      })), __jsx(Form.Item, {\n        name: \"title\",\n        rules: [{\n          required: true,\n          message: 'Please input title of menu!'\n        }],\n        label: \"Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, __jsx(Input, {\n        placeholder: \"Enter menu title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        name: \"section\",\n        label: \"Section\",\n        rules: [{\n          required: true,\n          message: 'Please select menu section!'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }, __jsx(Select, {\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, __jsx(Select.Option, {\n        key: \"main\",\n        value: \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, \"Main\"), __jsx(Select.Option, {\n        key: \"header\",\n        value: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }, \"Header\"), __jsx(Select.Option, {\n        key: \"footer\",\n        value: \"footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      }, \"Footer\"))), __jsx(Form.Item, {\n        name: \"parentId\",\n        label: \"Parent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }, __jsx(SelectMenuTreeDropdown, {\n        onSelect: function onSelect(val) {\n          return _this2.setFormVal('parentId', val);\n        },\n        menu: menu || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        name: \"ordering\",\n        label: \"Ordering\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }\n      }, __jsx(InputNumber, {\n        type: \"number\",\n        min: 1,\n        placeholder: \"Enter ordering of menu item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      })), __jsx(Form.Item, {\n        wrapperCol: {\n          span: 20,\n          offset: 4\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: submitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, \"Submit\")));\n    }\n  }]);\n\n  return FormMenu;\n}(PureComponent);","map":null,"metadata":{},"sourceType":"module"}
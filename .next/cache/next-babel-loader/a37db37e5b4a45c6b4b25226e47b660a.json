{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/src/components/performer/Schedule.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport { Form, TimePicker, Button, Checkbox } from 'antd';\nimport moment from 'moment';\nvar layout = {\n  labelCol: {\n    lg: {\n      span: 4\n    },\n    sm: {\n      span: 6\n    }\n  },\n  wrapperCol: {\n    lg: {\n      span: 16\n    },\n    sm: {\n      span: 14\n    }\n  }\n};\nvar validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  },\n  number: {\n    range: 'Must be between ${min} and ${max}'\n  }\n};\nexport var PerformerSchedule = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PerformerSchedule, _PureComponent);\n\n  var _super = _createSuper(PerformerSchedule);\n\n  function PerformerSchedule() {\n    _classCallCheck(this, PerformerSchedule);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PerformerSchedule, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          onFormRefSubmit = _this$props.onFormRefSubmit,\n          submiting = _this$props.submiting,\n          onChangeTime = _this$props.onChangeTime,\n          scheduleValue = _this$props.scheduleValue,\n          onChangeCloded = _this$props.onChangeCloded;\n      var dayValue = {\n        mon: {\n          day: 'Monday'\n        },\n        tue: {\n          day: 'Tuesday'\n        },\n        wed: {\n          day: 'Wednesday'\n        },\n        thu: {\n          day: 'Thursday'\n        },\n        fri: {\n          day: 'Friday'\n        },\n        sat: {\n          day: 'Saturday'\n        },\n        sun: {\n          day: 'Sunday'\n        }\n      };\n      var format = 'HH:mm';\n      var RangePicker = TimePicker.RangePicker;\n      return __jsx(Form, _extends({}, layout, {\n        name: \"form-performer-schedule\",\n        onFinish: function onFinish() {\n          return onFormRefSubmit();\n        },\n        validateMessages: validateMessages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }), Object.keys(dayValue).map(function (key) {\n        return __jsx(Form.Item, {\n          key: key,\n          label: dayValue[key].day,\n          initialValue: [moment(scheduleValue[key].start, format), scheduleValue[key].end ? moment(scheduleValue[key].end, format) : moment()],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }, __jsx(RangePicker, {\n          onChange: function onChange(dates, dateStrings) {\n            return onChangeTime(dates, dateStrings, key);\n          },\n          picker: \"time\",\n          format: format,\n          style: {\n            marginRight: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        }), __jsx(Checkbox, {\n          name: key,\n          key: key,\n          defaultChecked: scheduleValue[key].closed,\n          onChange: function onChange(e) {\n            return onChangeCloded(e.target.checked, key);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }\n        }, \"Not Available\"));\n      }), __jsx(Form.Item, {\n        wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n          offset: 4\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: submiting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, \"Submit\")));\n    }\n  }]);\n\n  return PerformerSchedule;\n}(PureComponent);","map":null,"metadata":{},"sourceType":"module"}
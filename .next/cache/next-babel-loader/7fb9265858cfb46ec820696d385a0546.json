{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/pages/studios/update.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment, createRef } from 'react';\nimport { Tabs, message } from 'antd';\nimport Page from '@components/common/layout/page';\nimport StudioAccountForm from '@components/studio/studio-account-form';\nimport { authService, studioService } from '@services/index';\nimport Loader from '@components/common/base/loader';\nimport { utilsService } from '@services/utils.service';\nimport { UpdatePaswordForm } from '@components/user/update-password-form';\nimport { BreadcrumbComponent } from '@components/common';\nimport StudioCommissionForm from '@components/studio/studio-commission-form';\nimport { getResponseError } from '@lib/utils';\nimport { StudioDocumentForm } from '@components/studio/studio-document-form';\n\nvar PerformerUpdate = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PerformerUpdate, _PureComponent);\n\n  var _super = _createSuper(PerformerUpdate);\n\n  function PerformerUpdate() {\n    var _this;\n\n    _classCallCheck(this, PerformerUpdate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      pwUpdating: false,\n      updating: false,\n      fetching: false,\n      studio: {},\n      settingUpdating: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_document\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"customFields\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"dates\", null);\n\n    return _this;\n  }\n\n  _createClass(PerformerUpdate, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.setState({\n                  fetching: true\n                });\n                _context.next = 4;\n                return studioService.findById(this.props.id);\n\n              case 4:\n                resp = _context.sent;\n                this.setState({\n                  studio: resp.data\n                });\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                message.error('Error while fecting performer!');\n\n              case 11:\n                _context.prev = 11;\n                this.setState({\n                  fetching: false\n                });\n                return _context.finish(11);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8, 11, 14]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        var updated;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                this.setState({\n                  updating: true\n                });\n                _context2.next = 4;\n                return studioService.update(this.props.id, _objectSpread(_objectSpread({}, data), this.customFields));\n\n              case 4:\n                updated = _context2.sent;\n                this.setState({\n                  performer: updated.data\n                });\n                message.success('Updated successfully');\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                // TODO - exact error message\n                message.error('An error occurred, please try again!');\n\n              case 12:\n                _context2.prev = 12;\n                this.setState({\n                  updating: false\n                });\n                return _context2.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 9, 12, 15]]);\n      }));\n\n      function submit(_x) {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  }, {\n    key: \"updatePassword\",\n    value: function () {\n      var _updatePassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n        var err;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                this.setState({\n                  pwUpdating: true\n                });\n                _context3.next = 4;\n                return authService.updatePassword(data.password, this.props.id, 'studio');\n\n              case 4:\n                message.success('Password has been updated!');\n                _context3.next = 13;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                _context3.next = 11;\n                return Promise.resolve(_context3.t0);\n\n              case 11:\n                err = _context3.sent;\n                message.error(getResponseError(err) || 'An error occurred, please try again!');\n\n              case 13:\n                _context3.prev = 13;\n                this.setState({\n                  pwUpdating: false\n                });\n                return _context3.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7, 13, 16]]);\n      }));\n\n      function updatePassword(_x2) {\n        return _updatePassword.apply(this, arguments);\n      }\n\n      return updatePassword;\n    }()\n  }, {\n    key: \"onUploaded\",\n    value: function onUploaded(field, resp) {\n      this.customFields[field] = resp.response.data._id;\n    }\n  }, {\n    key: \"onBeforeUpload\",\n    value: function onBeforeUpload(file) {\n      this._document = file;\n    }\n  }, {\n    key: \"onFormRefSubmit\",\n    value: function onFormRefSubmit() {\n      this.formRef.formRefSubmit();\n    }\n  }, {\n    key: \"updateCommissionSetting\",\n    value: function () {\n      var _updateCommissionSetting = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n        var err;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                this.setState({\n                  settingUpdating: true\n                });\n                _context4.next = 4;\n                return studioService.updateStudioCommission(this.props.id, _objectSpread(_objectSpread({}, data), {}, {\n                  studioId: this.props.id\n                }));\n\n              case 4:\n                message.success('Commission setting has been updated!');\n                _context4.next = 13;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                _context4.next = 11;\n                return Promise.resolve(_context4.t0);\n\n              case 11:\n                err = _context4.sent;\n                message.error(getResponseError(err) || 'An error occurred, please try again!');\n\n              case 13:\n                _context4.prev = 13;\n                this.setState({\n                  settingUpdating: false\n                });\n                return _context4.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 7, 13, 16]]);\n      }));\n\n      function updateCommissionSetting(_x3) {\n        return _updateCommissionSetting.apply(this, arguments);\n      }\n\n      return updateCommissionSetting;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          pwUpdating = _this$state.pwUpdating,\n          studio = _this$state.studio,\n          updating = _this$state.updating,\n          fetching = _this$state.fetching,\n          settingUpdating = _this$state.settingUpdating;\n      var countries = this.props.countries;\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, \"Studio update\")), __jsx(BreadcrumbComponent, {\n        breadcrumbs: [{\n          title: 'Studios',\n          href: '/studios'\n        }, {\n          title: studio.username\n        }, {\n          title: 'Update'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }), __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, fetching ? __jsx(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }) : studio ? __jsx(Tabs, {\n        defaultActiveKey: \"basic\",\n        tabPosition: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }\n      }, __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 34\n          }\n        }, \"General info\"),\n        key: \"basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }, __jsx(StudioAccountForm, {\n        ref: function ref(el) {\n          return _this2.formRef = el;\n        },\n        onFinish: this.submit.bind(this),\n        studio: studio,\n        submiting: updating,\n        countries: countries,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      })), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 34\n          }\n        }, \"Change password\"),\n        key: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }\n      }, __jsx(UpdatePaswordForm, {\n        onFinish: this.updatePassword.bind(this),\n        updating: pwUpdating,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      })), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 22\n          }\n        }, \"Commission Setting\"),\n        key: \"commission\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }, __jsx(StudioCommissionForm, {\n        submiting: settingUpdating,\n        onFinish: this.updateCommissionSetting.bind(this),\n        commission: studio.commission,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      })), __jsx(Tabs.TabPane, {\n        tab: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 34\n          }\n        }, \"Document\"),\n        key: \"document\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }, __jsx(StudioDocumentForm, {\n        submiting: updating,\n        onUploaded: this.onUploaded.bind(this),\n        studio: studio,\n        method: \"PUT\" // beforeUpload={this.onBeforeUpload.bind(this)}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }))) : __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, \"Studio not found!\")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref) {\n        var ctx, _yield$Promise$all, _yield$Promise$all2, countries;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                ctx = _ref.ctx;\n                _context5.next = 3;\n                return Promise.all([utilsService.countriesList()]);\n\n              case 3:\n                _yield$Promise$all = _context5.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 1);\n                countries = _yield$Promise$all2[0];\n                return _context5.abrupt(\"return\", _objectSpread({\n                  countries: countries.data\n                }, ctx.query));\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getInitialProps(_x4) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return PerformerUpdate;\n}(PureComponent);\n\nexport default PerformerUpdate;","map":null,"metadata":{},"sourceType":"module"}
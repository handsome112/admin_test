{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/admin.dtest.live/src/components/common/layout/menu.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent, Fragment } from \"react\";\nimport { Menu } from \"antd\";\nimport Link from \"next/link\";\nimport Router from 'next/router';\nexport var SiderMenu = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SiderMenu, _PureComponent);\n\n  var _super = _createSuper(SiderMenu);\n\n  function SiderMenu() {\n    var _this;\n\n    _classCallCheck(this, SiderMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedKeys: ['dashboard'],\n      openKeys: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenChange\", function (openKeys) {\n      var menus = _this.props.menus;\n      var rootSubmenuKeys = menus.filter(function (_) {\n        return !_.menuParentId;\n      }).map(function (_) {\n        return _.id;\n      });\n      var latestOpenKey = openKeys.find(function (key) {\n        return _this.state.openKeys.indexOf(key) === -1;\n      });\n      var newOpenKeys = openKeys;\n\n      if (rootSubmenuKeys.indexOf(latestOpenKey) !== -1) {\n        newOpenKeys = latestOpenKey ? [latestOpenKey] : [];\n      }\n\n      _this.setState({\n        openKeys: newOpenKeys\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"generateMenus\", function (data) {\n      return data.map(function (item) {\n        if (item.children) {\n          return __jsx(Menu.SubMenu, {\n            key: item.id,\n            title: __jsx(Fragment, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 15\n              }\n            }, item.icon, __jsx(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }\n            }, item.name)),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }\n          }, _this.generateMenus(item.children));\n        }\n\n        return __jsx(Menu.Item, {\n          key: item.id,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }\n        }, item.icon, __jsx(Link, {\n          href: item.route,\n          as: item.as || item.route,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }\n        }, __jsx(\"a\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        }, item.name)));\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(SiderMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Router.events.on('routeChangeStart', this.routerChange.bind(this));\n      var openKeys = this.getOpenKeys(this.props.menus);\n      this.setState({\n        openKeys: openKeys\n      });\n    }\n  }, {\n    key: \"flatten\",\n    value: function flatten(menus) {\n      var _this2 = this;\n\n      var flattenMenus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      menus.forEach(function (m) {\n        if (m.children) {\n          _this2.flatten(m.children, flattenMenus);\n        }\n\n        var tmp = _objectSpread({}, m);\n\n        delete tmp.children;\n        flattenMenus.push(tmp);\n      });\n      return flattenMenus;\n    }\n  }, {\n    key: \"getOpenKeys\",\n    value: function getOpenKeys(menus) {\n      var pathname = true ? Router.pathname : '';\n      var withoutQuery = pathname.split('?')[0];\n      var found = false;\n      var results = []; // TODO - optimize me if needed or more level\n\n      menus.forEach(function (menu) {\n        if (found) return;\n        var menuRoute = menu.route ? menu.route.split('?')[0] : '';\n\n        if (menu.route === pathname || menuRoute === withoutQuery) {\n          found = true;\n          results = [menu.id];\n          return;\n        }\n\n        if (menu.children) {\n          menu.children.forEach(function (cmenu) {\n            if (found) return;\n            var menuRoute = cmenu.route ? cmenu.route.split('?')[0] : '';\n\n            if (cmenu.route === pathname || menuRoute === withoutQuery) {\n              found = true;\n              results = [menu.id];\n              return;\n            }\n          });\n        }\n      });\n      return results;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          menus = _this$props.menus,\n          collapsed = _this$props.collapsed;\n      var menuProps = collapsed ? {} : {\n        openKeys: this.state.openKeys\n      };\n      return __jsx(Menu, _extends({\n        mode: \"inline\",\n        theme: theme // selectedKeys={this.state.selectedKeys}\n        ,\n        openKeys: this.state.openKeys,\n        onOpenChange: this.onOpenChange.bind(this) // onClick={\n        //   isMobile\n        //     ? () => {\n        //         onCollapseChange(true);\n        //       }\n        //     : undefined\n        // }\n\n      }, menuProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }), this.generateMenus(menus));\n    }\n  }]);\n\n  return SiderMenu;\n}(PureComponent);","map":null,"metadata":{},"sourceType":"module"}
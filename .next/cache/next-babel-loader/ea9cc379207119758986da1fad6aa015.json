{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/pages/gallery/update.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { PureComponent, Fragment } from 'react';\nimport Page from '@components/common/layout/page';\nimport { message } from 'antd';\nimport { galleryService } from '@services/gallery.service';\nimport Loader from '@components/common/base/loader';\nimport { BreadcrumbComponent } from '@components/common';\nimport { FormGallery } from '@components/gallery/form-gallery';\nimport Router from 'next/router';\n\nclass GalleryUpdate extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      submitting: false,\n      fetching: true,\n      gallery: {}\n    });\n  }\n\n  static async getInitialProps({\n    ctx\n  }) {\n    return ctx.query;\n  }\n\n  async componentDidMount() {\n    try {\n      const resp = await galleryService.findById(this.props.id);\n      this.setState({\n        gallery: resp.data\n      });\n    } catch (e) {\n      message.error('Gallery not found!');\n    } finally {\n      this.setState({\n        fetching: false\n      });\n    }\n  }\n\n  async submit(data) {\n    try {\n      this.setState({\n        submitting: true\n      });\n\n      const submitData = _objectSpread({}, data);\n\n      await galleryService.update(this.props.id, submitData);\n      message.success('Updated successfully');\n      this.setState({\n        submitting: false\n      });\n    } catch (e) {\n      // TODO - check and show error here\n      message.error('Something went wrong, please try again!');\n      this.setState({\n        submitting: false\n      });\n    }\n\n    Router.push('/gallery');\n  }\n\n  render() {\n    const {\n      gallery,\n      submitting,\n      fetching\n    } = this.state;\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Update Gallery\")), __jsx(BreadcrumbComponent, {\n      breadcrumbs: [{\n        title: 'Gallery',\n        href: '/gallery'\n      }, {\n        title: gallery.name ? gallery.name : 'Detail gallery'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, fetching ? __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }) : __jsx(FormGallery, {\n      gallery: gallery,\n      onFinish: this.submit.bind(this),\n      submitting: submitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default GalleryUpdate;","map":null,"metadata":{},"sourceType":"module"}
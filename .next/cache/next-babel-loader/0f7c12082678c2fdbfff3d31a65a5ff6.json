{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\n\nvar TokenPackageService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(TokenPackageService, _APIRequest);\n\n  var _super = _createSuper(TokenPackageService);\n\n  function TokenPackageService() {\n    _classCallCheck(this, TokenPackageService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TokenPackageService, [{\n    key: \"create\",\n    value: function create(payload) {\n      return this.post(\"/admin/package/token\", payload);\n    }\n  }, {\n    key: \"list\",\n    value: function list(query) {\n      return this.get(this.buildUrl(\"/admin/package/token/search\", query));\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, payload) {\n      return this.put(\"/admin/package/token/\" + id, payload);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return this.del(\"/admin/package/token/\" + id);\n    }\n  }, {\n    key: \"findOne\",\n    value: function findOne(id) {\n      return this.get(\"/admin/package/token/\" + id + \"/view\");\n    }\n  }]);\n\n  return TokenPackageService;\n}(APIRequest);\n\nexport var tokenPackageService = new TokenPackageService();","map":null,"metadata":{},"sourceType":"module"}
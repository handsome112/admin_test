{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/src/components/menu/form-menu.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent, createRef, Fragment } from 'react';\nimport { Form, Input, Button, Select, Switch, InputNumber, Popover } from 'antd';\nimport { SelectMenuTreeDropdown } from './common/menu-tree.select';\nimport { SelectPostDropdown } from '@components/post/select-post-dropdown';\nimport { isUrl } from '@lib/string';\nimport Link from 'next/link';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nexport class FormMenu extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"formRef\", void 0);\n\n    _defineProperty(this, \"state\", {\n      isInternal: false,\n      path: ''\n    });\n  }\n\n  componentDidMount() {\n    if (!this.formRef) this.formRef = createRef();\n    const {\n      menu\n    } = this.props;\n\n    if (menu) {\n      this.setState({\n        isInternal: menu.internal,\n        path: menu.path\n      });\n    }\n  }\n\n  setFormVal(field, val) {\n    const instance = this.formRef.current;\n    instance.setFieldsValue({\n      [field]: val\n    });\n  }\n\n  handleSubmit(data) {\n    const {\n      path,\n      internal\n    } = data;\n    const {\n      onFinish\n    } = this.props;\n\n    if (internal && !isUrl(path)) {\n      data.path = path;\n    }\n\n    onFinish(data);\n  }\n\n  render() {\n    if (!this.formRef) this.formRef = createRef();\n    const {\n      menu,\n      submitting\n    } = this.props;\n    const {\n      isInternal\n    } = this.state;\n    return __jsx(Form, {\n      ref: this.formRef,\n      onFinish: this.handleSubmit.bind(this),\n      initialValues: menu ? menu : {\n        title: '',\n        path: '',\n        help: '',\n        public: false,\n        internal: false,\n        parentId: null,\n        section: 'footer',\n        ordering: 1,\n        isOpenNewTab: false\n      },\n      labelCol: {\n        span: 4\n      },\n      wrapperCol: {\n        span: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, __jsx(Form.Item, {\n      name: \"internal\",\n      label: __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, __jsx(Popover, {\n        content: __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }\n        }, \"Using system website Static Page as menu item or external link\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          marginRight: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, __jsx(QuestionCircleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      }))), \"From sytem page?\"),\n      valuePropName: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, __jsx(Switch, {\n      defaultChecked: false,\n      onChange: val => {\n        this.setState({\n          isInternal: val\n        });\n        this.setFormVal('path', '');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    })), !isInternal && __jsx(Form.Item, {\n      name: \"isOpenNewTab\",\n      label: \"Is open in new tab?\",\n      valuePropName: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, __jsx(Switch, {\n      defaultChecked: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    })), isInternal ? __jsx(Form.Item, {\n      name: \"path\",\n      rules: [{\n        required: true,\n        message: 'Please select a page!'\n      }],\n      label: __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, __jsx(Popover, {\n        content: __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }\n        }, \"If there is no data, please create a page at\", ' ', __jsx(Link, {\n          href: \"/posts/create\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 23\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }\n        }, \"here\"))),\n        title: \"Pages listing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        style: {\n          marginRight: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      }, __jsx(QuestionCircleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }))), \"Page\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, __jsx(SelectPostDropdown, {\n      onSelect: (_, data) => {\n        const {\n          slug\n        } = data;\n        this.setFormVal('path', '/page/' + slug);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    })) : __jsx(Form.Item, {\n      name: \"path\",\n      rules: [{\n        required: true,\n        message: 'Please input url of menu!'\n      }, {\n        validator: (rule, value) => {\n          if (!value) return Promise.resolve();\n          const isUrlValid = isUrl(value);\n\n          if (!isUrlValid) {\n            return Promise.reject('The url is not valid');\n          }\n\n          return Promise.resolve();\n        }\n      }],\n      label: \"Url\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, __jsx(Input, {\n      placeholder: \"Enter menu url\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    })), __jsx(Form.Item, {\n      name: \"title\",\n      rules: [{\n        required: true,\n        message: 'Please input title of menu!'\n      }],\n      label: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, __jsx(Input, {\n      placeholder: \"Enter menu title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      name: \"section\",\n      label: \"Section\",\n      rules: [{\n        required: true,\n        message: 'Please select menu section!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, __jsx(Select, {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, __jsx(Select.Option, {\n      key: \"main\",\n      value: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, \"Main\"), __jsx(Select.Option, {\n      key: \"header\",\n      value: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, \"Header\"), __jsx(Select.Option, {\n      key: \"footer\",\n      value: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, \"Footer\"))), __jsx(Form.Item, {\n      name: \"parentId\",\n      label: \"Parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, __jsx(SelectMenuTreeDropdown, {\n      onSelect: val => this.setFormVal('parentId', val),\n      menu: menu || null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      name: \"ordering\",\n      label: \"Ordering\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, __jsx(InputNumber, {\n      type: \"number\",\n      min: 1,\n      placeholder: \"Enter ordering of menu item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      wrapperCol: {\n        span: 20,\n        offset: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: submitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/src/components/gallery/common/select-gallery-dropdown.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport { Select } from 'antd';\nimport { sortBy } from 'lodash';\nimport { galleryService } from '@services/gallery.service';\nconst {\n  Option\n} = Select;\nexport class SelectGalleryDropdown extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_initalData\", []);\n\n    _defineProperty(this, \"state\", {\n      data: [],\n      value: undefined\n    });\n\n    _defineProperty(this, \"handleSearch\", value => {\n      const q = value.toLowerCase();\n\n      const filtered = this._initalData.filter(g => {\n        return (g.name || '').toLowerCase().includes(q);\n      });\n\n      this.setState({\n        data: filtered\n      });\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.isQuery) {\n      this.findGalleries();\n    }\n  }\n\n  async findGalleries() {\n    const resp = await galleryService.search({\n      limit: 1000\n    });\n    this.setData(resp.data.data || []);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.galleries !== this.props.galleries) this.setData(this.props.galleries);\n  }\n\n  async setData(galleries) {\n    this._initalData = sortBy(galleries, g => g.performerId);\n    this.setState({\n      data: [...this._initalData]\n    });\n  }\n\n  render() {\n    const {\n      disabled\n    } = this.props;\n    return __jsx(Select, {\n      showSearch: true,\n      value: this.state.value,\n      placeholder: this.props.placeholder,\n      style: this.props.style,\n      defaultActiveFirstOption: false,\n      showArrow: true,\n      filterOption: false,\n      onSearch: this.handleSearch,\n      onChange: this.props.onSelect.bind(this),\n      notFoundContent: null,\n      defaultValue: this.props.defaultValue || undefined,\n      disabled: disabled,\n      allowClear: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, this.state.data.map(g => __jsx(Option, {\n      key: g._id,\n      value: g._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, g.name)))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
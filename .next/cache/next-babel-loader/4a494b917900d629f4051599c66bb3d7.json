{"ast":null,"code":"var _jsxFileName = \"/var/www/admin.dtest.live/src/components/gallery/form-gallery.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent, createRef } from 'react';\nimport { Form, Input, Button, InputNumber, Select, Checkbox } from 'antd';\nimport { SelectPerformerDropdown } from '@components/performer/common/select-performer-dropdown';\nexport class FormGallery extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"formRef\", void 0);\n\n    _defineProperty(this, \"state\", {\n      isSale: false\n    });\n  }\n\n  componentDidMount() {\n    if (!this.formRef) this.formRef = createRef();\n\n    if (this.props.gallery && this.props.gallery.isSale) {\n      this.setState({\n        isSale: true\n      });\n    }\n  }\n\n  setFormVal(field, val) {\n    const instance = this.formRef.current;\n    instance.setFieldsValue({\n      [field]: val\n    });\n  }\n\n  render() {\n    if (!this.formRef) this.formRef = createRef();\n    const {\n      gallery,\n      onFinish,\n      submitting\n    } = this.props;\n    const {\n      isSale\n    } = this.state;\n    return __jsx(Form, {\n      ref: this.formRef,\n      onFinish: onFinish.bind(this),\n      initialValues: gallery ? gallery : {\n        name: '',\n        description: '',\n        token: 0,\n        status: 'draft',\n        performerId: '',\n        isSale: false\n      },\n      labelCol: {\n        span: 4\n      },\n      wrapperCol: {\n        span: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, __jsx(Form.Item, {\n      name: \"performerId\",\n      label: \"Performer\",\n      rules: [{\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, __jsx(SelectPerformerDropdown, {\n      disabled: gallery && gallery.performerId ? true : false,\n      defaultValue: gallery && gallery.performerId,\n      onSelect: val => this.setFormVal('performerId', val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Please input title of gallery!'\n      }],\n      label: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, __jsx(Input, {\n      placeholder: \"Enter gallery name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      name: \"isSale\",\n      label: \"Is sale gallery?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, __jsx(Checkbox, {\n      checked: isSale,\n      onChange: v => {\n        this.setState({\n          isSale: v.target.checked\n        });\n        this.formRef.current.setFieldsValue({\n          isSale: !isSale\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      name: \"token\",\n      label: \"Token\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, __jsx(InputNumber, {\n      disabled: !isSale,\n      min: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      name: \"description\",\n      label: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, __jsx(Input.TextArea, {\n      rows: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      name: \"status\",\n      label: \"Status\",\n      rules: [{\n        required: true,\n        message: 'Please select status!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, __jsx(Select, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, __jsx(Select.Option, {\n      value: \"draft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Draft\"), __jsx(Select.Option, {\n      key: \"active\",\n      value: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Active\"), __jsx(Select.Option, {\n      key: \"inactive\",\n      value: \"inactive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Inactive\"))), __jsx(Form.Item, {\n      wrapperCol: {\n        offset: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        float: 'right'\n      },\n      loading: submitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import cookie from 'js-cookie';\nimport { APIRequest, TOKEN } from \"./api-request\";\nexport class AuthService extends APIRequest {\n  async login(data) {\n    return this.post('/auth/users/login', data);\n  }\n\n  setToken(token) {\n    false && localStorage.setItem(TOKEN, token); // https://github.com/js-cookie/js-cookie\n    // since Safari does not support, need a better solution\n\n    cookie.set(TOKEN, token);\n    this.setAuthHeaderToken(token);\n  }\n\n  getToken() {\n    const token = cookie.get(TOKEN);\n\n    if (token) {\n      return token;\n    }\n\n    return !token && false ? localStorage.getItem(TOKEN) : null;\n  }\n\n  removeToken() {\n    cookie.remove(TOKEN);\n    false && localStorage.removeItem(TOKEN);\n  }\n\n  updatePassword(password, userId, source) {\n    const url = userId ? '/auth/users/password' : '/auth/users/me/password';\n    return this.put(url, {\n      userId,\n      password,\n      source\n    });\n  }\n\n  forgotPassword(email, type) {\n    const data = {\n      email,\n      type\n    };\n    return this.post('/auth/users/forgot', data);\n  }\n\n}\nexport const authService = new AuthService();","map":null,"metadata":{},"sourceType":"module"}